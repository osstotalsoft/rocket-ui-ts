"use strict";(self.webpackChunk_totalsoft_rocket_ui=self.webpackChunk_totalsoft_rocket_ui||[]).push([[411],{"./src/stories/charts/statsChart/StatsChart.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Bar:()=>Bar,Default:()=>Default,Line:()=>Line,__namedExportsOrder:()=>__namedExportsOrder,default:()=>StatsChart_stories});var react=__webpack_require__("../../../.yarn/berry/cache/react-npm-18.3.1-af38f3c1ae-10c0.zip/node_modules/react/index.js");const statsChartOptions={responsive:!0,maintainAspectRatio:!1,barPercentage:.2,tooltip:!0,plugins:{title:{display:!1,text:""},legend:{display:!1}},layout:{padding:{left:0,right:20,top:20,bottom:0}},scales:{x:{offset:!1,grid:{display:!0,color:"white",borderDash:[1,5],zeroLineColor:"rgb(255,255,255)",drawBorder:!1,zeroLineWidth:0},scaleLabel:{display:!1,labelString:"",fontColor:"black"},ticks:{color:"white",autoSkip:!1}},y:{grid:{display:!0,color:"white",borderDash:[1,5],zeroLineColor:"rgb(255,255,255)",drawBorder:!1,zeroLineBorderDash:[1,5]},scaleLabel:{display:!1,labelString:"",fontColor:"black"},ticks:{color:"white"}}}},labels=["January","February","March","April","May","June","July"],statsChartData={labels,datasets:[{data:labels.map((()=>Math.floor(101*Math.random()))),label:"Dataset 1",backgroundColor:"white",borderColor:"white"},{data:labels.map((()=>Math.floor(101*Math.random()))),label:"Dataset 2",backgroundColor:"white",borderColor:"white"}]};var components=__webpack_require__("./src/components/index.ts"),createSvgIcon=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-2baa73ee9f/4/.yarn/berry/cache/@mui-material-npm-6.1.6-6fe62c1d46-10c0.zip/node_modules/@mui/material/utils/createSvgIcon.js"),jsx_runtime=__webpack_require__("../../../.yarn/berry/cache/react-npm-18.3.1-af38f3c1ae-10c0.zip/node_modules/react/jsx-runtime.js");const AccessTime=(0,createSvgIcon.A)([(0,jsx_runtime.jsx)("path",{d:"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8"},"0"),(0,jsx_runtime.jsx)("path",{d:"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"},"1")],"AccessTime");var Grid2=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-2baa73ee9f/4/.yarn/berry/cache/@mui-material-npm-6.1.6-6fe62c1d46-10c0.zip/node_modules/@mui/material/Grid2/Grid2.js");const BarPreview=()=>react.createElement(Grid2.A,{container:!0,spacing:2},react.createElement(Grid2.A,{size:6},react.createElement(components.y_,{type:"bar",data:statsChartData,chartColor:"info",StatIcon:AccessTime,statText:"Bar chart infos",title:"Bar Chart",options:statsChartOptions})),react.createElement(Grid2.A,{size:6},react.createElement(components.y_,{type:"bar",data:statsChartData,chartColor:"info",StatIcon:AccessTime,statText:"Bar chart infos",title:"Bar chart with action button",options:statsChartOptions,statAction:react.createElement(components.$n,{size:"tiny"},"Ok"),iconColor:"info"}))),statsChart_BarPreview=BarPreview;BarPreview.__docgenInfo={description:"",methods:[],displayName:"BarPreview"};const LinePreview=()=>react.createElement(Grid2.A,{container:!0,spacing:2},react.createElement(Grid2.A,{size:6},react.createElement(components.y_,{type:"line",data:statsChartData,chartColor:"info",StatIcon:AccessTime,statText:"Line chart",title:"Line Chart with warning icon color",options:statsChartOptions,iconColor:"error"})),react.createElement(Grid2.A,{size:6},react.createElement(components.y_,{type:"line",data:statsChartData,chartColor:"info",StatIcon:AccessTime,statText:"Line chart infos",title:"Line Chart with action button",options:statsChartOptions,statAction:react.createElement(components.$n,{size:"tiny"},"Ok")}))),statsChart_LinePreview=LinePreview;LinePreview.__docgenInfo={description:"",methods:[],displayName:"LinePreview"};const StatsChart_stories={title:"Components/Charts/StatsChart",component:components.y_,args:{width:500,height:200}},Default={args:{data:statsChartData,options:statsChartOptions},parameters:{docs:{source:{code:"<StatsChart\n            data={{\n                    labels: ['january', 'february], \n                    datasets: [{\n                        data: [10, 35], \n                        label: 'Dataset 1', \n                        backgroundColor: 'white',\n                        borderColor: 'white'}]\n                }}\n            chartColor={'info'}\n            StatIcon={AccessTime}\n            options={{\n                responsive: true,\n                maintainAspectRatio: false\n            }}\n          />",format:!0}}}},Line={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:"\n        <StatsChart\n          type=\"line\"\n          title={'Line Chart'}\n          chartColor={'info'}\n          StatIcon={AccessTime}\n          statText={'Line chart infos'}\n          data={DataToBeDisplayed}\n          options={statsChartOptions}\n        />\n        ",format:!0}}},render:()=>react.createElement(statsChart_LinePreview,null)},Bar={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:"\n        <StatsChart\n          type=\"bar\"\n          title={'Bar Chart'}\n          chartColor={'info'}\n          StatIcon={AccessTime}\n          statText={'Bar chart infos'}\n          data={DataToBeDisplayed}\n          options={statsChartOptions}\n        />\n        ",format:!0}}},render:args=>react.createElement(statsChart_BarPreview,args)},__namedExportsOrder=["Default","Line","Bar"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    data: statsChartData,\n    options: statsChartOptions\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `<StatsChart\n            data={{\n                    labels: ['january', 'february], \n                    datasets: [{\n                        data: [10, 35], \n                        label: 'Dataset 1', \n                        backgroundColor: 'white',\n                        borderColor: 'white'}]\n                }}\n            chartColor={'info'}\n            StatIcon={AccessTime}\n            options={{\n                responsive: true,\n                maintainAspectRatio: false\n            }}\n          />`,\n        format: true\n      }\n    }\n  }\n}",...Default.parameters?.docs?.source},description:{story:"The default StatsChart component.",...Default.parameters?.docs?.description}}},Line.parameters={...Line.parameters,docs:{...Line.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <StatsChart\n          type=\"line\"\n          title={'Line Chart'}\n          chartColor={'info'}\n          StatIcon={AccessTime}\n          statText={'Line chart infos'}\n          data={DataToBeDisplayed}\n          options={statsChartOptions}\n        />\n        `,\n        format: true\n      }\n    }\n  },\n  render: () => <LinePreview />\n}",...Line.parameters?.docs?.source},description:{story:"Besides showing chart data, the content of the component can be improved using properties like `chartColor`, `StatIcon` and many more.",...Line.parameters?.docs?.description}}},Bar.parameters={...Bar.parameters,docs:{...Bar.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <StatsChart\n          type=\"bar\"\n          title={'Bar Chart'}\n          chartColor={'info'}\n          StatIcon={AccessTime}\n          statText={'Bar chart infos'}\n          data={DataToBeDisplayed}\n          options={statsChartOptions}\n        />\n        `,\n        format: true\n      }\n    }\n  },\n  render: args => <BarPreview {...args} />\n}",...Bar.parameters?.docs?.source},description:{story:"`Bar` chart type can be used beside `Line` (which is the default).",...Bar.parameters?.docs?.description}}}}}]);