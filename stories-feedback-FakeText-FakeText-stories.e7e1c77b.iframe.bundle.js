"use strict";(self.webpackChunk_totalsoft_rocket_ui=self.webpackChunk_totalsoft_rocket_ui||[]).push([[99],{"./src/stories/feedback/FakeText/FakeText.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Animations:function(){return Animations},Default:function(){return Default},Variants:function(){return Variants},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return FakeText_stories}});var react=__webpack_require__("../../../.yarn/berry/cache/react-npm-18.2.0-1eae08fee2-10c0.zip/node_modules/react/index.js"),components=__webpack_require__("./src/components/index.ts"),Grid=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-6eb82f048f/4/.yarn/berry/cache/@mui-material-npm-5.16.0-a68e3c876b-10c0.zip/node_modules/@mui/material/Grid/Grid.js"),Typography=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-6eb82f048f/4/.yarn/berry/cache/@mui-material-npm-5.16.0-a68e3c876b-10c0.zip/node_modules/@mui/material/Typography/Typography.js");const AnimationsPreview=()=>react.createElement(Grid.ZP,{container:!0,rowSpacing:2,columnSpacing:4},react.createElement(Grid.ZP,{item:!0,sm:4},react.createElement(Typography.Z,{textAlign:"center"},"wave"),react.createElement(components.i,{variant:"text",animation:"wave",lines:6})),react.createElement(Grid.ZP,{item:!0,sm:4},react.createElement(Typography.Z,{textAlign:"center"},"pulse"),react.createElement(components.i,{variant:"text",animation:"pulse",lines:6})),react.createElement(Grid.ZP,{item:!0,sm:4},react.createElement(Typography.Z,{textAlign:"center"},"false"),react.createElement(components.i,{variant:"text",animation:!1,lines:6})),react.createElement(Grid.ZP,{item:!0,sm:4},react.createElement(Typography.Z,{textAlign:"center"},"wave"),react.createElement(components.i,{variant:"rectangular",animation:"wave",height:100})),react.createElement(Grid.ZP,{item:!0,sm:4},react.createElement(Typography.Z,{textAlign:"center"},"pulse"),react.createElement(components.i,{variant:"rectangular",animation:"pulse",height:100})),react.createElement(Grid.ZP,{item:!0,sm:4},react.createElement(Typography.Z,{textAlign:"center"},"false"),react.createElement(components.i,{variant:"rectangular",animation:!1,height:100})));var FakeText_AnimationsPreview=AnimationsPreview;AnimationsPreview.__docgenInfo={description:"",methods:[],displayName:"AnimationsPreview"};const VariantsPreview=()=>react.createElement(Grid.ZP,{container:!0,rowSpacing:2,columnSpacing:4},react.createElement(Grid.ZP,{item:!0,sm:3},react.createElement(Typography.Z,{textAlign:"center"},"text"),react.createElement(components.i,{lines:4})),react.createElement(Grid.ZP,{item:!0,sm:3},react.createElement(Typography.Z,{textAlign:"center"},"circular "),react.createElement(components.i,{variant:"circular",width:80,height:80})),react.createElement(Grid.ZP,{item:!0,sm:3},react.createElement(Typography.Z,{textAlign:"center"},"rectangular "),react.createElement(components.i,{variant:"rectangular",height:80})),react.createElement(Grid.ZP,{item:!0,sm:3},react.createElement(Typography.Z,{textAlign:"center"},"rounded "),react.createElement(components.i,{variant:"rounded",height:80})));var FakeText_VariantsPreview=VariantsPreview;VariantsPreview.__docgenInfo={description:"",methods:[],displayName:"VariantsPreview"};var FakeText_stories={title:"Components/Feedback/FakeText",component:components.i};const Default={args:{lines:4,onPaper:!1,width:"400px"}},Variants={parameters:{docs:{source:{code:"<FakeText lines={4} variant={one of the above options}/>"}}},render:()=>react.createElement(FakeText_VariantsPreview,null)},Animations={parameters:{docs:{source:{code:"<FakeText lines={4} variant={text} animation={your choice}/>"}}},render:()=>react.createElement(FakeText_AnimationsPreview,null)},__namedExportsOrder=["Default","Variants","Animations"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    lines: 4,\n    onPaper: false,\n    width: '400px'\n  }\n}",...Default.parameters?.docs?.source}}},Variants.parameters={...Variants.parameters,docs:{...Variants.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      source: {\n        code: '<FakeText lines={4} variant={one of the above options}/>'\n      }\n    }\n  },\n  render: () => <VariantsPreview />\n}",...Variants.parameters?.docs?.source},description:{story:"The component supports 4 shape variants:\n- `text` (default): represents a single line of text (you can adjust the height via font size).\n- `circular`, `rectangular`, and `rounded`: come with different border radius to let you take control of the size.",...Variants.parameters?.docs?.description}}},Animations.parameters={...Animations.parameters,docs:{...Animations.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      source: {\n        code: '<FakeText lines={4} variant={text} animation={your choice}/>'\n      }\n    }\n  },\n  render: () => <AnimationsPreview />\n}",...Animations.parameters?.docs?.source},description:{story:"By default, `animation` is set to `wave`, but you can change the animation to a `pulse` or disable it entirely.",...Animations.parameters?.docs?.description}}}}}]);