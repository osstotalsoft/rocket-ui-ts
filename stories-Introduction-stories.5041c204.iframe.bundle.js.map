{"version":3,"file":"stories-Introduction-stories.5041c204.iframe.bundle.js","mappings":";;;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;;;;;;;;;;;AAYA;;;;;;;AAOA;AAGA;;;;AAIA;;AAKA;;;;;;;AAOA;;;;;;;AASA;;;;;;;;;;AAUA;;;AAKA;;;;;;;;;;AAUA;;;AAKA;;;;;;;;;;AAUA;;;AC5HA","sources":["webpack://@totalsoft/rocket-ui/./src/stories/_introduction/orbits/OrbitStyles.ts","webpack://@totalsoft/rocket-ui/./src/stories/_introduction/orbits/OrbitSwitch.tsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport { css } from '@emotion/css'\nimport materialImage from '../../assets/img/satellite.png'\nimport githubImage from '../../assets/img/spaceship.png'\nimport bitImage from '../../assets/img/robot.png'\nimport rocketImage from '../../assets/img/rocket.png'\nimport { Link } from '@mui/material'\n\nexport const Container = styled.div`\n  position: relative;\n  min-height: 100vh;\n`\n\nexport const Orbit = styled(Link, { shouldForwardProp: prop => prop !== 'orbitColor' })`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  border: 1px solid rgba(102, 166, 229, 0.12);\n  border-radius: 1000px;\n  transform: translate(-50%, -50%);\n  transition: border 300ms ease;\n\n  &::before {\n    position: absolute;\n    content: '';\n    transform: translate(-50%, -50%);\n    border-radius: 100px;\n    transition: transform 300ms ease;\n  }\n\n  @keyframes orbit {\n    0% {\n      transform: translate(-50%, -50%) rotate(0deg);\n    }\n    100% {\n      transform: translate(-50%, -50%) rotate(-360deg);\n    }\n  }\n\n  @media (min-width: 768px) {\n    &:hover {\n      border: 1px solid ${(props: any) => props.orbitColor};\n\n      &::before {\n        transform: scale(1.5) translate(-50%, -50%);\n      }\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    &:focus-visible {\n      border: 1px solid ${(props: any) => props.orbitColor};\n\n      &::before {\n        transform: scale(1.5) translate(-50%, -50%);\n      }\n    }\n\n    ${(props: any) =>\n      props.isActive\n        ? css`\n            border: 1px solid ${props.orbitColor};\n            &::before {\n              transform: scale(1.5) translate(-50%, -50%);\n            }\n          `\n        : ''};\n  }\n`\n\nexport const Rocket = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  height: 256px;\n  width: 256px;\n  border-radius: 1000px;\n  background-image: url(${rocketImage});\n  background-size: cover;\n  box-shadow:\n    0 0 10px 2px rgba(255, 107, 0, 0.4),\n    0 0 22px 11px rgba(255, 203, 0, 0.13);\n  transform: translate(-50%, -50%);\n  z-index: 150;\n`\n\nexport const MaterialOrbit = styled(Orbit)`\n  width: 310px;\n  height: 310px;\n  animation: orbit 12.1867343561s linear infinite;\n  z-index: 100;\n\n  &::before {\n    height: 80px;\n    width: 80px;\n    left: 75%;\n    background-image: url(${materialImage});\n    background-size: cover;\n  }\n`\n\nexport const GitHubOrbit = styled(Orbit)`\n  width: 480px;\n  height: 480px;\n  animation: orbit 18.4555338265s linear infinite;\n  z-index: 99;\n\n  &::before {\n    height: 74px;\n    width: 74px;\n    left: 28%;\n    background-image: url(${githubImage});\n    background-size: cover;\n  }\n`\n\nexport const BitOrbit = styled(Orbit)`\n  width: 660px;\n  height: 660px;\n  animation: orbit 30s linear infinite;\n  z-index: 98;\n\n  &::before {\n    width: 70px;\n    height: 70px;\n    left: 50%;\n    background-image: url(${bitImage});\n    background-size: cover;\n  }\n`\n","import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { MaterialOrbit, GitHubOrbit, BitOrbit } from './OrbitStyles'\n\nconst OrbitSwitch = ({ data, setActiveItem }: any) => {\n  const { id, website, orbitColor } = data\n\n  const handleOrbitHover = useCallback(() => setActiveItem(id), [id, setActiveItem])\n\n  const orbitProps = {\n    href: website,\n    orbitColor,\n    target: '_blank',\n    onMouseOver: handleOrbitHover\n  }\n\n  const orbitSwitch = () => {\n    switch (data.id) {\n      case 1:\n        return <MaterialOrbit {...orbitProps} />\n      case 2:\n        return <GitHubOrbit {...orbitProps} />\n      case 3:\n        return <BitOrbit {...orbitProps} />\n    }\n  }\n\n  return <>{orbitSwitch()}</>\n}\n\nOrbitSwitch.propTypes = {\n  data: PropTypes.object.isRequired,\n  setActiveItem: PropTypes.func.isRequired\n}\n\nexport default OrbitSwitch\n"],"names":[],"sourceRoot":""}