"use strict";(self.webpackChunk_totalsoft_rocket_ui=self.webpackChunk_totalsoft_rocket_ui||[]).push([[942],{"../../../.yarn/berry/cache/ramda-npm-0.30.1-b62811823d-10c0.zip/node_modules/ramda/es/drop.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>es_drop});var _curry2=__webpack_require__("../../../.yarn/berry/cache/ramda-npm-0.30.1-b62811823d-10c0.zip/node_modules/ramda/es/internal/_curry2.js"),_dispatchable=__webpack_require__("../../../.yarn/berry/cache/ramda-npm-0.30.1-b62811823d-10c0.zip/node_modules/ramda/es/internal/_dispatchable.js"),_xfBase=__webpack_require__("../../../.yarn/berry/cache/ramda-npm-0.30.1-b62811823d-10c0.zip/node_modules/ramda/es/internal/_xfBase.js"),XDrop=function(){function XDrop(n,xf){this.xf=xf,this.n=n}return XDrop.prototype["@@transducer/init"]=_xfBase.A.init,XDrop.prototype["@@transducer/result"]=_xfBase.A.result,XDrop.prototype["@@transducer/step"]=function(result,input){return this.n>0?(this.n-=1,result):this.xf["@@transducer/step"](result,input)},XDrop}();function _xdrop(n){return function(xf){return new XDrop(n,xf)}}var slice=__webpack_require__("../../../.yarn/berry/cache/ramda-npm-0.30.1-b62811823d-10c0.zip/node_modules/ramda/es/slice.js");const es_drop=(0,_curry2.A)((0,_dispatchable.A)(["drop"],_xdrop,(function drop(n,xs){return(0,slice.A)(Math.max(0,n),1/0,xs)})))},"./.yarn/__virtual__/@mui-icons-material-virtual-6e221a8391/4/.yarn/berry/cache/@mui-icons-material-npm-6.1.6-d2fed2768b-10c0.zip/node_modules/@mui/icons-material/esm/BedroomBaby.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-2baa73ee9f/4/.yarn/berry/cache/@mui-material-npm-6.1.6-6fe62c1d46-10c0.zip/node_modules/@mui/material/utils/createSvgIcon.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../../.yarn/berry/cache/react-npm-18.3.1-af38f3c1ae-10c0.zip/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__=(0,_utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__.A)([(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2m-8 16c-2.64 0-5.13-1.03-7-2.9l1.06-1.06c.34.34.71.65 1.1.92L8 13.5V9.51l-1.55.99-.95-1L7 7.76 6 7h3.65l1.73 3H17v1h-1v2.5l.84 1.46c.39-.28.76-.58 1.1-.92L19 15.1c-1.87 1.87-4.36 2.9-7 2.9"},"0"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M14.69 14.24c-1.74.65-3.66.65-5.4 0l-.81 1.41-.03.06c1.1.52 2.28.79 3.53.79s2.45-.28 3.55-.79l-.03-.06z"},"1")],"BedroomBaby")},"./.yarn/__virtual__/@mui-icons-material-virtual-6e221a8391/4/.yarn/berry/cache/@mui-icons-material-npm-6.1.6-d2fed2768b-10c0.zip/node_modules/@mui/icons-material/esm/BugReport.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-2baa73ee9f/4/.yarn/berry/cache/@mui-material-npm-6.1.6-6fe62c1d46-10c0.zip/node_modules/@mui/material/utils/createSvgIcon.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../../.yarn/berry/cache/react-npm-18.3.1-af38f3c1ae-10c0.zip/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__=(0,_utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__.A)((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5s-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20zm-6 8h-4v-2h4zm0-4h-4v-2h4z"}),"BugReport")},"./.yarn/__virtual__/@mui-icons-material-virtual-6e221a8391/4/.yarn/berry/cache/@mui-icons-material-npm-6.1.6-d2fed2768b-10c0.zip/node_modules/@mui/icons-material/esm/EmojiNature.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-2baa73ee9f/4/.yarn/berry/cache/@mui-material-npm-6.1.6-6fe62c1d46-10c0.zip/node_modules/@mui/material/utils/createSvgIcon.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../../.yarn/berry/cache/react-npm-18.3.1-af38f3c1ae-10c0.zip/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__=(0,_utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__.A)((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M21.94 4.88c-.18-.53-.69-.88-1.26-.88H19.6l-.31-.97C19.15 2.43 18.61 2 18 2s-1.15.43-1.29 1.04L16.4 4h-1.07c-.57 0-1.08.35-1.26.88-.19.56.04 1.17.56 1.48l.87.52-.4 1.24c-.23.58-.04 1.25.45 1.62.23.17.51.26.78.26.31 0 .61-.11.86-.32l.81-.7.81.7c.25.21.55.32.86.32.27 0 .55-.09.78-.26.5-.37.68-1.04.45-1.62l-.39-1.24.87-.52c.51-.31.74-.92.56-1.48M18 7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1m-4.51 3.51c-.43-.43-.94-.73-1.49-.93V8h-1v1.38c-.11-.01-.23-.03-.34-.03-1.02 0-2.05.39-2.83 1.17-.16.16-.3.34-.43.53L6 10.52c-1.56-.55-3.28.27-3.83 1.82-.27.75-.23 1.57.12 2.29.23.48.58.87 1 1.16-.38 1.35-.06 2.85 1 3.91s2.57 1.38 3.91 1c.29.42.68.77 1.16 1q.63.3 1.29.3c.34 0 .68-.06 1.01-.17 1.56-.55 2.38-2.27 1.82-3.85l-.52-1.37c.18-.13.36-.27.53-.43.87-.87 1.24-2.04 1.14-3.17H16v-1h-1.59c-.19-.55-.49-1.06-.92-1.5m-8.82 3.78c-.25-.09-.45-.27-.57-.51s-.13-.51-.04-.76c.19-.52.76-.79 1.26-.61l3.16 1.19c-1.15.6-2.63 1.11-3.81.69m6.32 5.65c-.25.09-.52.08-.76-.04-.24-.11-.42-.32-.51-.57-.42-1.18.09-2.65.7-3.8l1.18 3.13c.18.52-.09 1.1-.61 1.28m1.21-5.34-.61-1.61c0-.01-.01-.02-.02-.03l-.06-.12c-.02-.04-.04-.07-.07-.11l-.09-.09-.09-.09c-.03-.03-.07-.05-.11-.07s-.07-.05-.12-.06c-.01 0-.02-.01-.03-.02l-1.6-.6c.36-.29.79-.46 1.26-.46.53 0 1.04.21 1.41.59.73.73.77 1.88.13 2.67"}),"EmojiNature")},"./.yarn/__virtual__/@mui-icons-material-virtual-6e221a8391/4/.yarn/berry/cache/@mui-icons-material-npm-6.1.6-d2fed2768b-10c0.zip/node_modules/@mui/icons-material/esm/Pets.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-2baa73ee9f/4/.yarn/berry/cache/@mui-material-npm-6.1.6-6fe62c1d46-10c0.zip/node_modules/@mui/material/utils/createSvgIcon.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../../.yarn/berry/cache/react-npm-18.3.1-af38f3c1ae-10c0.zip/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__=(0,_utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__.A)([(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle",{cx:"4.5",cy:"9.5",r:"2.5"},"0"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle",{cx:"9",cy:"5.5",r:"2.5"},"1"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle",{cx:"15",cy:"5.5",r:"2.5"},"2"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle",{cx:"19.5",cy:"9.5",r:"2.5"},"3"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M17.34 14.86c-.87-1.02-1.6-1.89-2.48-2.91-.46-.54-1.05-1.08-1.75-1.32q-.165-.06-.33-.09c-.25-.04-.52-.04-.78-.04s-.53 0-.79.05q-.165.03-.33.09c-.7.24-1.28.78-1.75 1.32-.87 1.02-1.6 1.89-2.48 2.91-1.31 1.31-2.92 2.76-2.62 4.79.29 1.02 1.02 2.03 2.33 2.32.73.15 3.06-.44 5.54-.44h.18c2.48 0 4.81.58 5.54.44 1.31-.29 2.04-1.31 2.33-2.32.31-2.04-1.3-3.49-2.61-4.8"},"4")],"Pets")},"./src/stories/inputs/Autocomplete/Autocomplete.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checkboxes:()=>Checkboxes,Creatable:()=>Creatable,Default:()=>Default,Grouped:()=>Grouped,LazyLoading:()=>LazyLoading,LazyLoadingPaginated:()=>LazyLoadingPaginated,MixedValue:()=>MixedValue,MultipleSelection:()=>MultipleSelection,OptionRendering:()=>OptionRendering,OptionTypes:()=>OptionTypes,TextFieldInheritance:()=>TextFieldInheritance,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Autocomplete_stories});var react=__webpack_require__("../../../.yarn/berry/cache/react-npm-18.3.1-af38f3c1ae-10c0.zip/node_modules/react/index.js"),components=__webpack_require__("./src/components/index.ts"),Grid2=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-2baa73ee9f/4/.yarn/berry/cache/@mui-material-npm-6.1.6-6fe62c1d46-10c0.zip/node_modules/@mui/material/Grid2/Grid2.js"),prop_types=__webpack_require__("../../../.yarn/berry/cache/prop-types-npm-15.8.1-17c71ee7ee-10c0.zip/node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types);const FormattedJson=({children})=>react.createElement("pre",{style:{wordBreak:"break-word",whiteSpace:"pre-wrap",margin:0}},JSON.stringify(children,null,3));FormattedJson.propTypes={children:prop_types_default().oneOfType([prop_types_default().array,prop_types_default().object,prop_types_default().number,prop_types_default().string])};const components_FormattedJson=FormattedJson;FormattedJson.__docgenInfo={description:"",methods:[],displayName:"FormattedJson",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"",type:{name:"union",value:[{name:"array"},{name:"object"},{name:"number"},{name:"string"}]}}}};const ColumnHeader=({children})=>react.createElement(components.o5,{variant:"body1",emphasis:"bold"},children);ColumnHeader.propTypes={children:prop_types_default().node};const components_ColumnHeader=ColumnHeader;ColumnHeader.__docgenInfo={description:"",methods:[],displayName:"ColumnHeader",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"",type:{name:"node"}}}};var _mocks=__webpack_require__("./src/stories/inputs/Autocomplete/_mocks.ts");const CreatablePreview=()=>{const[basicValue,setBasicValue]=(0,react.useState)(null),[primitiveStringValue,setPrimitiveStringValue]=(0,react.useState)(null),[primitiveNumericValue,setPrimitiveNumericValue]=(0,react.useState)(null),[numericValue,setNumericValue]=(0,react.useState)(null);return react.createElement(Grid2.A,{container:!0,spacing:2},react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:3},react.createElement(components_ColumnHeader,null,"Component")),react.createElement(Grid2.A,{size:3},react.createElement(components_ColumnHeader,null,"Type")),react.createElement(Grid2.A,{size:3},react.createElement(components_ColumnHeader,null,"Value"))),react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:3},react.createElement(components.jT,{label:"Autocomplete",value:basicValue,onChange:setBasicValue,creatable:!0,isClearable:!0,options:_mocks.fF})),react.createElement(Grid2.A,{container:!0,alignContent:"flex-start",size:3},react.createElement(components.o5,{variant:"body1"},"Object: { id: number, name: string }")),react.createElement(Grid2.A,{size:3},react.createElement(components_FormattedJson,null,basicValue))),react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:3},react.createElement(components.jT,{label:"Primitive String Autocomplete",value:primitiveStringValue,creatable:!0,isClearable:!0,onChange:setPrimitiveStringValue,options:_mocks.B9})),react.createElement(Grid2.A,{size:3},react.createElement(components.o5,{variant:"body1"},"String")),react.createElement(Grid2.A,{size:3},react.createElement(components_FormattedJson,null,primitiveStringValue))),react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:3},react.createElement(components.jT,{label:"Primitive Numeric Autocomplete",value:primitiveNumericValue,creatable:!0,isClearable:!0,onChange:setPrimitiveNumericValue,options:_mocks.VE})),react.createElement(Grid2.A,{size:3},react.createElement(components.o5,{variant:"body1"},"Number")),react.createElement(Grid2.A,{size:3},react.createElement(components_FormattedJson,null,primitiveNumericValue))),react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:3},react.createElement(components.jT,{label:"Numeric Autocomplete",value:numericValue,onChange:setNumericValue,creatable:!0,isClearable:!0,labelKey:"period",valueKey:"period",options:_mocks.qZ})),react.createElement(Grid2.A,{size:3},react.createElement(components.o5,{variant:"body1"},"Object: { period: number }")),react.createElement(Grid2.A,{size:3},react.createElement(components_FormattedJson,null,numericValue))))};CreatablePreview.__docgenInfo={description:"",methods:[],displayName:"CreatablePreview"};var Stack=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-2baa73ee9f/4/.yarn/berry/cache/@mui-material-npm-6.1.6-6fe62c1d46-10c0.zip/node_modules/@mui/material/Stack/Stack.js");const DefaultPreview=props=>{const[value,setValue]=(0,react.useState)(props?.value);return react.createElement(Stack.A,{spacing:1},react.createElement(components.jT,{...props,value,onChange:setValue}),react.createElement(components.o5,null,`Selected value: ${JSON.stringify(value)}`))};DefaultPreview.__docgenInfo={description:"",methods:[],displayName:"DefaultPreview"};var TypographyStyles=__webpack_require__("./src/components/dataDisplay/Typography/TypographyStyles.ts");const OptionTypesPreview=()=>{const[value,setValue]=react.useState(null),[numericValue,setNumericValue]=react.useState(null),[stringValue,setStringValue]=react.useState(null);return react.createElement(Grid2.A,{container:!0,spacing:2},react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:3},react.createElement(components_ColumnHeader,null,"Component")),react.createElement(Grid2.A,{size:3},react.createElement(components_ColumnHeader,null,"Option Type")),react.createElement(Grid2.A,{size:3},react.createElement(components_ColumnHeader,null,"Value"))),react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:3},react.createElement(components.jT,{label:"Autocomplete",value,onChange:setValue,isClearable:!0,options:_mocks.fF})),react.createElement(Grid2.A,{container:!0,alignContent:"flex-start",size:3},react.createElement(TypographyStyles.A,{variant:"body1"},"Object: { id: number, name: string }")),react.createElement(Grid2.A,{size:3},react.createElement(components_FormattedJson,null,value))),react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:3},react.createElement(components.jT,{label:"Numeric Autocomplete",value:numericValue,onChange:setNumericValue,isClearable:!0,options:_mocks.VE})),react.createElement(Grid2.A,{size:3},react.createElement(TypographyStyles.A,{variant:"body1"},"Number")),react.createElement(Grid2.A,{size:3},react.createElement(components_FormattedJson,null,numericValue))),react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:3},react.createElement(components.jT,{label:"String Autocomplete",value:stringValue,onChange:setStringValue,options:_mocks.B9,isClearable:!0})),react.createElement(Grid2.A,{size:3},react.createElement(TypographyStyles.A,{variant:"body1"},"String")),react.createElement(Grid2.A,{size:3},react.createElement(components_FormattedJson,null,stringValue))))};OptionTypesPreview.__docgenInfo={description:"",methods:[],displayName:"OptionTypesPreview"};var constants=__webpack_require__("./src/components/utils/constants.ts");const MultipleSelectionPreview=()=>{const[basicReason,setBasicReason]=(0,react.useState)(constants.bQ),[basicValue,setBasicValue]=(0,react.useState)(constants.tR),handleBasicChange=(0,react.useCallback)(((value,_env,reason)=>{setBasicValue(value),setBasicReason(reason)}),[]),[stringReason,setStringReason]=(0,react.useState)(constants.bQ),[stringValue,setStringValue]=(0,react.useState)(constants.tR),handleStringChange=(0,react.useCallback)(((value,_env,reason)=>{setStringValue(value),setStringReason(reason)}),[]),[numericReason,setNumericReason]=(0,react.useState)(constants.tR),[numericValue,setNumericValue]=(0,react.useState)(constants.tR),handleNumericChange=(0,react.useCallback)(((value,_env,reason)=>{setNumericValue(value),setNumericReason(reason)}),[]);return react.createElement(Grid2.A,{container:!0,spacing:2},react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:6},react.createElement(components_ColumnHeader,null,"Component")),react.createElement(Grid2.A,{size:3},react.createElement(components_ColumnHeader,null,"Reason")),react.createElement(Grid2.A,{size:3},react.createElement(components_ColumnHeader,null,"Value"))),react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:6},react.createElement(components.jT,{label:"Autocomplete",value:basicValue,onChange:handleBasicChange,options:_mocks.fF,isMultiSelection:!0,creatable:!0})),react.createElement(Grid2.A,{size:3},basicReason),react.createElement(Grid2.A,{size:3},react.createElement(components_FormattedJson,null,basicValue))),react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:6},react.createElement(components.jT,{label:"Primitive Autocomplete",value:stringValue,onChange:handleStringChange,options:_mocks.B9,isMultiSelection:!0,creatable:!0})),react.createElement(Grid2.A,{size:3},stringReason),react.createElement(Grid2.A,{size:3},react.createElement(components_FormattedJson,null,stringValue))),react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:6},react.createElement(components.jT,{label:"Numeric Autocomplete",value:numericValue,onChange:handleNumericChange,options:_mocks.VE,isMultiSelection:!0,creatable:!0})),react.createElement(Grid2.A,{size:3},numericReason),react.createElement(Grid2.A,{size:3},react.createElement(components_FormattedJson,null,numericValue))))};MultipleSelectionPreview.__docgenInfo={description:"",methods:[],displayName:"MultipleSelectionPreview"};const RequiredPreview=()=>react.createElement(Grid2.A,{container:!0,spacing:2},react.createElement(Grid2.A,{container:!0,spacing:4,size:12},react.createElement(Grid2.A,{size:3},react.createElement(components.jT,{required:!0,label:"Required",options:_mocks.fF})),react.createElement(Grid2.A,{size:3},react.createElement(components.jT,{error:!0,label:"Error",options:_mocks.fF})),react.createElement(Grid2.A,{size:3},react.createElement(components.jT,{helperText:"Please, select an option.",label:"Helper text",options:_mocks.fF})),react.createElement(Grid2.A,{size:3},react.createElement(components.jT,{label:"Variant outlined",options:_mocks.fF,inputTextFieldProps:{variant:"outlined"}}))));RequiredPreview.__docgenInfo={description:"",methods:[],displayName:"RequiredPreview"};var Box=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-2baa73ee9f/4/.yarn/berry/cache/@mui-material-npm-6.1.6-6fe62c1d46-10c0.zip/node_modules/@mui/material/Box/Box.js");const CustomOptionPreview=props=>{const[value,setValue]=(0,react.useState)();return react.createElement(components.jT,{...props,value,onChange:setValue,renderOption:(props,option)=>react.createElement("li",props,react.createElement(Box.A,{component:option.icon,width:25,height:25,marginRight:"15px"}),react.createElement(Box.A,null,react.createElement(components.o5,{variant:"body1"},option.name),react.createElement(components.o5,{variant:"body2",color:"error"},option.description)))})};CustomOptionPreview.__docgenInfo={description:"",methods:[],displayName:"CustomOptionPreview"};var styled=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-2baa73ee9f/4/.yarn/berry/cache/@mui-material-npm-6.1.6-6fe62c1d46-10c0.zip/node_modules/@mui/material/styles/styled.js");const GroupHeader=(0,styled.Ay)("div")((({theme})=>({...theme.typography.defaultFont,padding:"4px 10px",fontWeight:"bold"}))),GroupItems=(0,styled.Ay)("ul")((({theme})=>({...theme.typography.defaultFont,paddingLeft:"5px"}))),GroupedPreview=props=>{const[value,setValue]=(0,react.useState)(constants.tR),groupBy=(0,react.useCallback)((option=>option.category?.name),[]),renderGroup=(0,react.useCallback)((params=>react.createElement("li",{key:params.key},react.createElement(GroupHeader,null,params.group),react.createElement(GroupItems,null,params.children))),[]);return react.createElement(components.jT,{...props,fullWidth:!0,value,onChange:setValue,options:_mocks.jD,groupBy,renderGroup})};GroupedPreview.__docgenInfo={description:"",methods:[],displayName:"GroupedPreview"};const Autocomplete_stories={title:"Components/Inputs/Autocomplete",component:components.jT},Default={parameters:{docs:{source:{code:'\n        <Autocomplete\n            label="Autocomplete"\n            value={value}\n            onChange={onChangeFn}\n            options={optionsArray}\n          />\n        ',format:!0}}},args:{label:"Basic Autocomplete",options:_mocks.fF},render:args=>react.createElement(DefaultPreview,args)},OptionTypes={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:'\n        <>\n          <Autocomplete\n            label="Autocomplete"\n            value={{ id: 1, name: \'Cat\' }}\n            options={[{ id: 1, name: \'Cat\' }, { id: 2, name: \'Dog\' }, { id: 3, name: \'Turtle\' }]}\n          />\n          <Autocomplete\n            label="Numeric Autocomplete"\n            value={1}\n            options={[1,2,3]}\n          />\n          <Autocomplete\n            label="String Autocomplete"\n            value={"first option"}\n            options={["first option", "second option", "third option"]}\n          />\n        </>\n        ',format:!0}}},render:args=>react.createElement(OptionTypesPreview,args)},OptionRendering={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:'\n        <Autocomplete\n            label="Custom Options"\n            value={value}\n            onChange={setValue}\n            options={options}\n            renderOption={(props, option) => (\n              <li {...props}>\n                <Box component={option.icon} width={25} height={25} marginRight="15px" />\n                <Box>\n                  <Typography variant="body1">{option.name}</Typography>\n                  <Typography variant="body2" color="error">\n                    {option.description}\n                  </Typography>\n                </Box>\n              </li>\n            )}\n          />\n        ',format:!0}}},args:{label:"Custom Options",options:_mocks.Ud},render:args=>react.createElement(CustomOptionPreview,args)},Creatable={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:'\n        <Autocomplete\n            label="Creatable Autocomplete"\n            value={value}\n            onChange={setNumericValue}\n            creatable={true}\n            createdLabel={"New option"}\n            options={options}\n          />\n        ',format:!0}}},render:args=>react.createElement(CreatablePreview,args)},MultipleSelection={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:'\n        <Autocomplete\n            label="Multiple Selection"\n            value={value}\n            onChange={setValue}\n            options={options}\n            isMultiSelection\n          />\n        ',format:!0}}},render:args=>react.createElement(MultipleSelectionPreview,args)},Checkboxes={parameters:{docs:{source:{code:'\n        <Autocomplete\n            label="Autocomplete"\n            value={value}\n            onChange={onChangeFn}\n            options={optionsArray}\n            isMultiSelection\n            withCheckboxes\n          />\n        ',format:!0}}},args:{label:"Multiple Selection with Checkboxes",options:_mocks.fF,isMultiSelection:!0,withCheckboxes:!0},render:args=>react.createElement(components.jT,args)},LazyLoading={parameters:{docs:{source:{code:'\n        <Autocomplete\n            label="Autocomplete"\n            value={value}\n            onChange={onChangeFn}\n            loadOptions={loadOptionsFn}\n          />\n        ',format:!0}}},args:{label:"Lazy Loading",loadOptions:_mocks.ZG},render:args=>react.createElement(DefaultPreview,{...args,value:{id:1,name:"Cat"}})},LazyLoadingPaginated={parameters:{docs:{source:{code:'\n        <Autocomplete\n            label="Autocomplete"\n            value={value}\n            onChange={onChangeFn}\n            loadOptions={loadOptionsFn}\n            isPaginated={true}\n          />\n        ',format:!0}}},args:{label:"Lazy Loading",loadOptions:_mocks.lb,isPaginated:!0},render:args=>react.createElement(DefaultPreview,args)},TextFieldInheritance={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:'\n        <Autocomplete \n          required \n          label="Required" \n          options={options} \n        />\n        <Autocomplete \n          error \n          label="Error" \n          options={options} \n        />\n        <Autocomplete\n          helperText="Please, select an option."\n          label="Helper text"\n          options={options}\n        />\n        <Autocomplete\n          label="Variant outlined"\n          options={options}\n          inputTextFieldProps={{ variant: \'outlined\' }}\n        />\n        ',format:!0}}},render:args=>react.createElement(RequiredPreview,args)},Grouped={parameters:{docs:{source:{code:"\nimport React, { useCallback, useState } from 'react'\nimport { Autocomplete } from 'components'\nimport { emptyArray } from 'components/utils/constants'\nimport { groupedOptions } from './_mocks'\nimport { styled } from '@mui/material'\n\nconst GroupHeader = styled('div')(({ theme }) => ({\n  ...theme.typography.defaultFont,\n  padding: '4px 10px',\n  fontWeight: 'bold'\n}))\n\nconst GroupItems = styled('ul')(({ theme }) => ({\n  ...theme.typography.defaultFont,\n  paddingLeft:'5px'\n}))\n\nexport const GroupedPreview = (props: any) => {\n  const [value, setValue] = useState(emptyArray)\n\n  const groupBy = useCallback((option: any) => option.category?.name, [])\n\n  const renderGroup = useCallback(\n    (params: any) => (\n      <li key={params.key}>\n        <GroupHeader>{params.group}</GroupHeader>\n        <GroupItems>{params.children}</GroupItems>\n      </li>\n    ),\n    []\n  )\n\n  return (\n    <Autocomplete\n      {...props}\n      fullWidth\n      value={value}\n      onChange={setValue}\n      options={groupedOptions}\n      groupBy={groupBy}\n      renderGroup={renderGroup}\n    />\n  )\n}\n        ",format:!0}}},args:{label:"Grouped Options"},render:args=>react.createElement(GroupedPreview,args)},MixedValue={parameters:{docs:{source:{code:'\n        <Autocomplete\n          label="Autocomplete"\n          value={optionsArray[0].id}\n          options={optionsArray}\n        />\n        <Autocomplete\n          label="Multiple Selection"\n          value={[optionsArray[0].id, optionsArray[1]]}\n          options={optionsArray}\n          isMultiSelection\n        />\n        ',format:!0}}},args:{options:_mocks.fF},render:args=>{const options=args.options,value=options[0].id,values=[options[0].id,options[1]];return react.createElement(Stack.A,{spacing:2},react.createElement(Stack.A,{spacing:2,direction:"row",alignItems:"flex-end"},react.createElement(components.jT,{label:"Autocomplete",value,options}),react.createElement(components.o5,{variant:"body1"},`value={${value}}`)),react.createElement(Stack.A,{spacing:2,direction:"row",alignItems:"flex-end"},react.createElement(components.jT,{label:"Multiple Selection",value:values,options,isMultiSelection:!0}),react.createElement(components.o5,{variant:"body1"},`value={${JSON.stringify(values)}}`)))}},__namedExportsOrder=["Default","OptionTypes","OptionRendering","Creatable","MultipleSelection","Checkboxes","LazyLoading","LazyLoadingPaginated","TextFieldInheritance","Grouped","MixedValue"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      source: {\n        code: `\n        <Autocomplete\n            label=\"Autocomplete\"\n            value={value}\n            onChange={onChangeFn}\n            options={optionsArray}\n          />\n        `,\n        format: true\n      }\n    }\n  },\n  args: {\n    label: 'Basic Autocomplete',\n    options\n  },\n  render: args => <DefaultPreview {...args} />\n}",...Default.parameters?.docs?.source},description:{story:"The default Autocomplete component.\n\nThe value must be chosen from a predefined set of allowed values.",...Default.parameters?.docs?.description}}},OptionTypes.parameters={...OptionTypes.parameters,docs:{...OptionTypes.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <>\n          <Autocomplete\n            label="Autocomplete"\n            value={{ id: 1, name: \'Cat\' }}\n            options={[{ id: 1, name: \'Cat\' }, { id: 2, name: \'Dog\' }, { id: 3, name: \'Turtle\' }]}\n          />\n          <Autocomplete\n            label="Numeric Autocomplete"\n            value={1}\n            options={[1,2,3]}\n          />\n          <Autocomplete\n            label="String Autocomplete"\n            value={"first option"}\n            options={["first option", "second option", "third option"]}\n          />\n        </>\n        `,\n        format: true\n      }\n    }\n  },\n  render: args => <OptionTypesPreview {...args} />\n}',...OptionTypes.parameters?.docs?.source},description:{story:"By default, the component accepts the following options structures:\n\n```typescript\ninterface AutocompleteOption {\nid: any\nname: string\n}\n// or\ntype AutocompleteOption = string;\n```\nfor instance:\n\n```typescript\nconst options = [\n{ name: 'The Godfather', id: 1 },\n{ name: 'Pulp Fiction', id: 2 },\n]\n// or\nconst options = ['The Godfather', 'Pulp Fiction']\n```",...OptionTypes.parameters?.docs?.description}}},OptionRendering.parameters={...OptionRendering.parameters,docs:{...OptionRendering.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <Autocomplete\n            label="Custom Options"\n            value={value}\n            onChange={setValue}\n            options={options}\n            renderOption={(props, option) => (\n              <li {...props}>\n                <Box component={option.icon} width={25} height={25} marginRight="15px" />\n                <Box>\n                  <Typography variant="body1">{option.name}</Typography>\n                  <Typography variant="body2" color="error">\n                    {option.description}\n                  </Typography>\n                </Box>\n              </li>\n            )}\n          />\n        `,\n        format: true\n      }\n    }\n  },\n  args: {\n    label: \'Custom Options\',\n    options: customOptions\n  },\n  render: args => <CustomOptionPreview {...args} />\n}',...OptionRendering.parameters?.docs?.source},description:{story:"To customize the rendering of the object, the user can use the `renderOption` function property. See its definition \n\n```javascript\n// Render the option, use `getOptionLabel` by default.\n//\n// @param {object} props The props to apply on the li element.\n// @param {T} option The option to render.\n// @param {object} state The state of each option.\n// @param {object} ownerState The state of the Autocomplete component.\n// @returns {ReactNode}\nrenderOption?: (\nprops: React.HTMLAttributes<HTMLLIElement> & { key: any },\noption: T,\nstate: AutocompleteRenderOptionState,\nownerState: AutocompleteOwnerState<T, Multiple, DisableClearable, FreeSolo, ChipComponent>\n) => React.ReactNode\n```\nAssuming the options array looks as follows, check-out the custom rendering function presented in the next example.\n```\nconst customOptions = [\n{ id: 1, name: 'Cat', icon: Pets, description: 'A cat is the best pet' },\n{ id: 2, name: 'Dog', icon: EmojiNature, description: 'A dos is a man best friend' },\n{ id: 3, name: 'Turtle', icon: BugReport, description: 'Turtles are slow' },\n{ id: 4, name: 'Horse', icon: BedroomBaby , description: 'Horses are elegant.'}\n]\n```",...OptionRendering.parameters?.docs?.description}}},Creatable.parameters={...Creatable.parameters,docs:{...Creatable.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <Autocomplete\n            label="Creatable Autocomplete"\n            value={value}\n            onChange={setNumericValue}\n            creatable={true}\n            createdLabel={"New option"}\n            options={options}\n          />\n        `,\n        format: true\n      }\n    }\n  },\n  render: args => <CreatablePreview {...args} />\n}',...Creatable.parameters?.docs?.source},description:{story:'By setting the `creatable` property to `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options and can add\nhis own values.\n\nThe label that is displayed before adding a new option is also configurable using `createdLabel` property. By default it\'s set to "Add"',...Creatable.parameters?.docs?.description}}},MultipleSelection.parameters={...MultipleSelection.parameters,docs:{...MultipleSelection.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <Autocomplete\n            label="Multiple Selection"\n            value={value}\n            onChange={setValue}\n            options={options}\n            isMultiSelection\n          />\n        `,\n        format: true\n      }\n    }\n  },\n  render: args => <MultipleSelectionPreview {...args} />\n}',...MultipleSelection.parameters?.docs?.source},description:{story:"Also known as tags, the user is allowed to enter more than one value.\nThis is possible by setting the `isMultiSelection` property to `true`.",...MultipleSelection.parameters?.docs?.description}}},Checkboxes.parameters={...Checkboxes.parameters,docs:{...Checkboxes.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      source: {\n        code: `\n        <Autocomplete\n            label=\"Autocomplete\"\n            value={value}\n            onChange={onChangeFn}\n            options={optionsArray}\n            isMultiSelection\n            withCheckboxes\n          />\n        `,\n        format: true\n      }\n    }\n  },\n  args: {\n    label: 'Multiple Selection with Checkboxes',\n    options,\n    isMultiSelection: true,\n    withCheckboxes: true\n  },\n  render: args => <AutocompleteComponent {...args} />\n}",...Checkboxes.parameters?.docs?.source},description:{story:"Multiple selection can also be done using checkboxes by setting the `withCheckboxes` property to `true`.",...Checkboxes.parameters?.docs?.description}}},LazyLoading.parameters={...LazyLoading.parameters,docs:{...LazyLoading.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      source: {\n        code: `\n        <Autocomplete\n            label=\"Autocomplete\"\n            value={value}\n            onChange={onChangeFn}\n            loadOptions={loadOptionsFn}\n          />\n        `,\n        format: true\n      }\n    }\n  },\n  args: {\n    label: 'Lazy Loading',\n    loadOptions\n  },\n  render: args => <DefaultPreview {...args} value={{\n    id: 1,\n    name: 'Cat'\n  }} />\n}",...LazyLoading.parameters?.docs?.source},description:{story:"The component supports loading options asynchronously. It basically waits for the component to be interacted with to load the options.\n\nDuring the `loading` state, it displays a progress state as long as the network request is pending.",...LazyLoading.parameters?.docs?.description}}},LazyLoadingPaginated.parameters={...LazyLoadingPaginated.parameters,docs:{...LazyLoadingPaginated.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      source: {\n        code: `\n        <Autocomplete\n            label=\"Autocomplete\"\n            value={value}\n            onChange={onChangeFn}\n            loadOptions={loadOptionsFn}\n            isPaginated={true}\n          />\n        `,\n        format: true\n      }\n    }\n  },\n  args: {\n    label: 'Lazy Loading',\n    loadOptions: loadFilteredOptionsPaginated,\n    isPaginated: true\n  },\n  render: args => <DefaultPreview {...args} />\n}",...LazyLoadingPaginated.parameters?.docs?.source},description:{story:'The component supports fetching data incrementally for large data sets. When the isPaginated prop is true, the loadOptions callback is fired when the user scrolls to the end of the options.\n\nThe loadOptions function you provide must be async and it can receive the following 3 parameters:\nthe current value of the search input; the currently loaded options; an "additional" object used to accumulate information required for the incremental query, such as the current page (null by default)\n\nThe loadOptions function must return an object with the shape {options: Array, hasMore: boolean, additional?: any}.\noptions will contain the new data to append, hasMore is used to determine if there is more data to fetch and the additional object will be passed to loadOptions on the next fetch',...LazyLoadingPaginated.parameters?.docs?.description}}},TextFieldInheritance.parameters={...TextFieldInheritance.parameters,docs:{...TextFieldInheritance.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <Autocomplete \n          required \n          label="Required" \n          options={options} \n        />\n        <Autocomplete \n          error \n          label="Error" \n          options={options} \n        />\n        <Autocomplete\n          helperText="Please, select an option."\n          label="Helper text"\n          options={options}\n        />\n        <Autocomplete\n          label="Variant outlined"\n          options={options}\n          inputTextFieldProps={{ variant: \'outlined\' }}\n        />\n        `,\n        format: true\n      }\n    }\n  },\n  render: args => <RequiredPreview {...args} />\n}',...TextFieldInheritance.parameters?.docs?.source},description:{story:"Various configurations using `TextField` inherited props. Check-out the code bellow.",...TextFieldInheritance.parameters?.docs?.description}}},Grouped.parameters={...Grouped.parameters,docs:{...Grouped.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      source: {\n        code: `\nimport React, { useCallback, useState } from 'react'\nimport { Autocomplete } from 'components'\nimport { emptyArray } from 'components/utils/constants'\nimport { groupedOptions } from './_mocks'\nimport { styled } from '@mui/material'\n\nconst GroupHeader = styled('div')(({ theme }) => ({\n  ...theme.typography.defaultFont,\n  padding: '4px 10px',\n  fontWeight: 'bold'\n}))\n\nconst GroupItems = styled('ul')(({ theme }) => ({\n  ...theme.typography.defaultFont,\n  paddingLeft:'5px'\n}))\n\nexport const GroupedPreview = (props: any) => {\n  const [value, setValue] = useState(emptyArray)\n\n  const groupBy = useCallback((option: any) => option.category?.name, [])\n\n  const renderGroup = useCallback(\n    (params: any) => (\n      <li key={params.key}>\n        <GroupHeader>{params.group}</GroupHeader>\n        <GroupItems>{params.children}</GroupItems>\n      </li>\n    ),\n    []\n  )\n\n  return (\n    <Autocomplete\n      {...props}\n      fullWidth\n      value={value}\n      onChange={setValue}\n      options={groupedOptions}\n      groupBy={groupBy}\n      renderGroup={renderGroup}\n    />\n  )\n}\n        `,\n        format: true\n      }\n    }\n  },\n  args: {\n    label: 'Grouped Options'\n  },\n  render: args => <GroupedPreview {...args} />\n}",...Grouped.parameters?.docs?.source},description:{story:"You can group the options with the `groupBy` prop. If you do so, make sure that the options are also sorted with the same dimension that they are grouped by, otherwise, you will notice duplicate headers.\n\nTo control how the groups are rendered, provide a custom renderGroup prop. This is a function that accepts an object with two fields:\n- `group` — a string representing a group name\n- `children` — a collection of list items that belong to the group\nThe following demo shows how to use this prop to define custom markup and override the styles of the default groups:",...Grouped.parameters?.docs?.description}}},MixedValue.parameters={...MixedValue.parameters,docs:{...MixedValue.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    docs: {\n      source: {\n        code: `\n        <Autocomplete\n          label="Autocomplete"\n          value={optionsArray[0].id}\n          options={optionsArray}\n        />\n        <Autocomplete\n          label="Multiple Selection"\n          value={[optionsArray[0].id, optionsArray[1]]}\n          options={optionsArray}\n          isMultiSelection\n        />\n        `,\n        format: true\n      }\n    }\n  },\n  args: {\n    options\n  },\n  render: args => {\n    const options: readonly any[] = args.options;\n    const value = options[0].id;\n    const values = [options[0].id, options[1]];\n    return <Stack spacing={2}>\n        <Stack spacing={2} direction="row" alignItems="flex-end">\n          <AutocompleteComponent label="Autocomplete" value={value} options={options} />\n          <Typography variant={\'body1\'}>{`value={${value}}`}</Typography>\n        </Stack>\n        <Stack spacing={2} direction="row" alignItems="flex-end">\n          <AutocompleteComponent label="Multiple Selection" value={values} options={options} isMultiSelection />\n          <Typography variant={\'body1\'}>{`value={${JSON.stringify(values)}}`}</Typography>\n        </Stack>\n      </Stack>;\n  }\n}',...MixedValue.parameters?.docs?.source},description:{story:"You can give your autocomplete both the option or just it's `valueKey` in the `value` prop.\nThis will render the option from the `options` array when found, otherwise it will render the value as it is.\nWhen you have multiple selection enabled, the `value` array can be a mix between.",...MixedValue.parameters?.docs?.description}}}},"./src/stories/inputs/Autocomplete/_mocks.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B9:()=>primitiveStringOptions,Ud:()=>customOptions,VE:()=>primitiveNumericOptions,ZG:()=>loadOptions,fF:()=>options,jD:()=>groupedOptions,lb:()=>loadFilteredOptionsPaginated,qZ:()=>numericOptions});var _mui_icons_material_Pets__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./.yarn/__virtual__/@mui-icons-material-virtual-6e221a8391/4/.yarn/berry/cache/@mui-icons-material-npm-6.1.6-d2fed2768b-10c0.zip/node_modules/@mui/icons-material/esm/Pets.js"),_mui_icons_material_EmojiNature__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.yarn/__virtual__/@mui-icons-material-virtual-6e221a8391/4/.yarn/berry/cache/@mui-icons-material-npm-6.1.6-d2fed2768b-10c0.zip/node_modules/@mui/icons-material/esm/EmojiNature.js"),_mui_icons_material_BugReport__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./.yarn/__virtual__/@mui-icons-material-virtual-6e221a8391/4/.yarn/berry/cache/@mui-icons-material-npm-6.1.6-d2fed2768b-10c0.zip/node_modules/@mui/icons-material/esm/BugReport.js"),_mui_icons_material_BedroomBaby__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./.yarn/__virtual__/@mui-icons-material-virtual-6e221a8391/4/.yarn/berry/cache/@mui-icons-material-npm-6.1.6-d2fed2768b-10c0.zip/node_modules/@mui/icons-material/esm/BedroomBaby.js"),ramda__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../../.yarn/berry/cache/ramda-npm-0.30.1-b62811823d-10c0.zip/node_modules/ramda/es/includes.js"),ramda__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../../.yarn/berry/cache/ramda-npm-0.30.1-b62811823d-10c0.zip/node_modules/ramda/es/take.js"),ramda__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../../.yarn/berry/cache/ramda-npm-0.30.1-b62811823d-10c0.zip/node_modules/ramda/es/drop.js"),ramda__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../../../.yarn/berry/cache/ramda-npm-0.30.1-b62811823d-10c0.zip/node_modules/ramda/es/map.js"),ramda__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../../../.yarn/berry/cache/ramda-npm-0.30.1-b62811823d-10c0.zip/node_modules/ramda/es/find.js"),ramda__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("../../../.yarn/berry/cache/ramda-npm-0.30.1-b62811823d-10c0.zip/node_modules/ramda/es/propEq.js");const options=[{id:1,name:"Cat"},{id:2,name:"Dog",isDisabled:!0},{id:3,name:"Turtle"},{id:4,name:"Horse"}],optionsLong=[{id:1,name:"Cat"},{id:2,name:"Dog"},{id:3,name:"Turtle"},{id:4,name:"Horse"},{id:5,name:"Tiger"},{id:6,name:"Wolf"},{id:7,name:"Tortoise"},{id:8,name:"Zebra"},{id:9,name:"Lion"},{id:10,name:"Coyote"},{id:11,name:"Iguana"},{id:12,name:"Donkey"},{id:13,name:"Jaguar"},{id:14,name:"Dingo"},{id:15,name:"Gecko"},{id:16,name:"Mule"},{id:17,name:"Panther"},{id:18,name:"Fox"},{id:19,name:"Snake"},{id:20,name:"Pony"},{id:21,name:"Cat 2"},{id:22,name:"Dog 2"},{id:23,name:"Turtle 2"},{id:24,name:"Horse 2"},{id:25,name:"Tiger 2"},{id:26,name:"Wolf 2"},{id:27,name:"Tortoise 2"},{id:28,name:"Zebra 2"},{id:29,name:"Lion 2"},{id:30,name:"Coyote 2"},{id:31,name:"Iguana 2"},{id:32,name:"Donkey 2"},{id:33,name:"Jaguar 2"},{id:34,name:"Dingo 2"},{id:35,name:"Gecko 2"},{id:36,name:"Mule 2"},{id:37,name:"Panther 2"},{id:38,name:"Fox 2"},{id:39,name:"Snake 2"},{id:40,name:"Pony 2"}],customOptions=[{id:1,name:"Cat",icon:_mui_icons_material_Pets__WEBPACK_IMPORTED_MODULE_0__.A,description:"A cat is the best pet"},{id:2,name:"Dog",icon:_mui_icons_material_EmojiNature__WEBPACK_IMPORTED_MODULE_1__.A,description:"A dos is a man best friend"},{id:3,name:"Turtle",icon:_mui_icons_material_BugReport__WEBPACK_IMPORTED_MODULE_2__.A,description:"Turtles are slow"},{id:4,name:"Horse",icon:_mui_icons_material_BedroomBaby__WEBPACK_IMPORTED_MODULE_3__.A,description:"Horses are elegant."}],primitiveStringOptions=["first option","second option","third option"],primitiveNumericOptions=[1,2,3],numericOptions=[{period:1},{period:2},{period:3}];function sleep(delay=0){return new Promise((resolve=>{setTimeout(resolve,delay)}))}let prevInput;const loadFilteredOptionsPaginated=async(input,_,additional)=>{await sleep(1e3);const currentPage=prevInput!==input?0:additional?.page??0,filteredOptions=input?optionsLong.filter((o=>(0,ramda__WEBPACK_IMPORTED_MODULE_4__.A)(input,o.name))):optionsLong,paginatedOptions=(0,ramda__WEBPACK_IMPORTED_MODULE_5__.A)(15,(0,ramda__WEBPACK_IMPORTED_MODULE_6__.A)(15*currentPage,filteredOptions));return prevInput=input,new Promise((res=>res({loadedOptions:paginatedOptions,more:15===paginatedOptions.length,additional:{page:prevInput!==input?0:currentPage+1}})))},loadOptions=async()=>(await sleep(1e3),new Promise((res=>res(options)))),categories=[{id:1,name:"Animals"},{id:2,name:"Cars"},{id:3,name:"Colors"}],groupedOptions=ramda__WEBPACK_IMPORTED_MODULE_7__.A((({categoryId,...res})=>({...res,category:ramda__WEBPACK_IMPORTED_MODULE_8__.A(ramda__WEBPACK_IMPORTED_MODULE_9__.A(categoryId,"id"),categories)})),[{id:1,categoryId:1,name:"Cat"},{id:2,categoryId:1,name:"Rabbit"},{id:3,categoryId:2,name:"Audi"},{id:4,categoryId:2,name:"BMW"},{id:5,categoryId:3,name:"Blue"},{id:6,categoryId:3,name:"Red"},{id:7,categoryId:3,name:"Yellow"}])}}]);