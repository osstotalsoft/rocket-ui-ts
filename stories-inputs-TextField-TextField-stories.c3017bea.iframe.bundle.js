"use strict";(self.webpackChunk_totalsoft_rocket_ui=self.webpackChunk_totalsoft_rocket_ui||[]).push([[960],{"./src/stories/inputs/TextField/TextField.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Clearable:()=>Clearable,Default:()=>Default,FormProps:()=>FormProps,Numeric:()=>Numeric,Stepper:()=>Stepper,Validation:()=>Validation,Variants:()=>Variants,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TextField_stories});var react=__webpack_require__("../../../.yarn/berry/cache/react-npm-19.0.0-e33c9aa1c0-10c0.zip/node_modules/react/index.js"),components=__webpack_require__("./src/components/index.ts"),Grid2=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-caf4cefd95/4/.yarn/berry/cache/@mui-material-npm-6.4.0-9baf3cbb27-10c0.zip/node_modules/@mui/material/Grid2/Grid2.js");const VariantsPreview=()=>react.createElement(Grid2.A,{container:!0,spacing:4,justifyItems:"flex-start"},react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Standard (default)",fullWidth:!0})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Outlined",variant:"outlined",fullWidth:!0})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Filled",variant:"filled",fullWidth:!0}))),TextField_VariantsPreview=VariantsPreview;VariantsPreview.__docgenInfo={description:"",methods:[],displayName:"VariantsPreview"};const FormPropsPreview=()=>{const[value,setValue]=(0,react.useState)(),handleValueChange=value=>{setValue(value)};return react.createElement(Grid2.A,{container:!0,spacing:4,justifyItems:"flex-start"},react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{required:!0,label:"Required",value:value||"",onChange:handleValueChange,debounceBy:1e3,fullWidth:!0})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Read-only",value:"cannot be modified",InputProps:{readOnly:!0},fullWidth:!0})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Disabled",value:"cannot be modified",disabled:!0,fullWidth:!0})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Password",type:"password",variant:"outlined",value:value||"",onChange:handleValueChange,debounceBy:1e3,fullWidth:!0})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Read-only",value:"cannot be modified",variant:"outlined",InputProps:{readOnly:!0},fullWidth:!0})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Disabled",variant:"outlined",value:"cannot be modified",disabled:!0,fullWidth:!0})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Basic text field",variant:"filled",value:value||"",onChange:handleValueChange,debounceBy:1e3,fullWidth:!0})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Read-only",value:"cannot be modified",variant:"filled",InputProps:{readOnly:!0},fullWidth:!0})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Disabled",variant:"filled",value:"cannot be modified",disabled:!0,fullWidth:!0})))},TextField_FormPropsPreview=FormPropsPreview;FormPropsPreview.__docgenInfo={description:"",methods:[],displayName:"FormPropsPreview"};const ValidationPreview=()=>react.createElement(Grid2.A,{container:!0,spacing:4,justifyItems:"flex-start"},react.createElement(Grid2.A,{size:6},react.createElement(components.A_,{label:"Error",fullWidth:!0,error:!0})),react.createElement(Grid2.A,{size:6},react.createElement(components.A_,{label:"Error",helperText:"Incorrect input",fullWidth:!0,error:!0})),react.createElement(Grid2.A,{size:6},react.createElement(components.A_,{label:"Error",variant:"outlined",fullWidth:!0,error:!0})),react.createElement(Grid2.A,{size:6},react.createElement(components.A_,{label:"Error",helperText:"Incorrect input",variant:"outlined",fullWidth:!0,error:!0})),react.createElement(Grid2.A,{size:6},react.createElement(components.A_,{label:"Error",variant:"filled",fullWidth:!0,error:!0})),react.createElement(Grid2.A,{size:6},react.createElement(components.A_,{label:"Error",helperText:"Incorrect input",variant:"filled",fullWidth:!0,error:!0}))),TextField_ValidationPreview=ValidationPreview;ValidationPreview.__docgenInfo={description:"",methods:[],displayName:"ValidationPreview"};const StepperPreview=()=>{const[stepperValue,setStepperValue]=(0,react.useState)(""),[limitedStepperValue,setLimitedStepperValue]=(0,react.useState)(""),[customStepValue,setCustomStepValue]=(0,react.useState)("");return react.createElement(Grid2.A,{container:!0,spacing:4,justifyItems:"flex-start"},react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Basic stepper",isStepper:!0,value:stepperValue??"",onChange:value=>{setStepperValue(value)},decimalScale:0})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Limited stepper (0 to 5)",isStepper:!0,value:limitedStepperValue??"",onChange:value=>{setLimitedStepperValue(value)},decimalScale:0,minValue:0,maxValue:5})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Custom step value",isStepper:!0,step:.5,value:customStepValue??"",onChange:value=>{setCustomStepValue(value)}})))},TextField_StepperPreview=StepperPreview;StepperPreview.__docgenInfo={description:"",methods:[],displayName:"StepperPreview"};var createSvgIcon=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-caf4cefd95/4/.yarn/berry/cache/@mui-material-npm-6.4.0-9baf3cbb27-10c0.zip/node_modules/@mui/material/utils/createSvgIcon.js"),jsx_runtime=__webpack_require__("../../../.yarn/berry/cache/react-npm-19.0.0-e33c9aa1c0-10c0.zip/node_modules/react/jsx-runtime.js");const Assignment=(0,createSvgIcon.A)((0,jsx_runtime.jsx)("path",{d:"M19 3h-4.18C14.4 1.84 13.3 1 12 1s-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1m2 14H7v-2h7zm3-4H7v-2h10zm0-4H7V7h10z"}),"Assignment");var Save=__webpack_require__("./.yarn/__virtual__/@mui-icons-material-virtual-26efe69e79/4/.yarn/berry/cache/@mui-icons-material-npm-6.4.0-7ebdd5ff6d-10c0.zip/node_modules/@mui/icons-material/esm/Save.js");const ClearablePreview=()=>{const[clearableValue,setClearableValue]=(0,react.useState)("can be cleared"),handleClearable=value=>{setClearableValue(value)};return react.createElement(Grid2.A,{container:!0,spacing:4,justifyItems:"flex-start"},react.createElement(Grid2.A,{size:12},react.createElement(components.o5,null,"Variants:")),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Standard (default)",fullWidth:!0,value:clearableValue||"",onChange:handleClearable,isClearable:!0})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Outlined",variant:"outlined",fullWidth:!0,value:clearableValue||"",onChange:handleClearable,isClearable:!0})),react.createElement(Grid2.A,{size:4},react.createElement(components.A_,{label:"Filled",variant:"filled",fullWidth:!0,value:clearableValue||"",onChange:handleClearable,isClearable:!0})),react.createElement(Grid2.A,{size:12},react.createElement(components.o5,null,"With end adornments:")),react.createElement(Grid2.A,{size:12},react.createElement(components.A_,{label:"Filled",variant:"filled",fullWidth:!0,value:clearableValue||"",onChange:handleClearable,isClearable:!0,endAdornment:react.createElement(react.Fragment,null,react.createElement(components.K0,{tooltip:"Copy",variant:"text",size:"tiny",color:"primary"},react.createElement(Assignment,{fontSize:"small"})),react.createElement(components.K0,{tooltip:"Save",variant:"text",size:"tiny",color:"primary"},react.createElement(Save.A,{fontSize:"small"})))})))},TextField_ClearablePreview=ClearablePreview;ClearablePreview.__docgenInfo={description:"",methods:[],displayName:"ClearablePreview"};const NumericPreview=()=>{const[numberValue,setNumberValue]=(0,react.useState)(),[internationalValue,setInternationalValue]=(0,react.useState)(50),handleInternationalValue=value=>{setInternationalValue(value)};return react.createElement(Grid2.A,{container:!0,spacing:4,justifyItems:"flex-start"},react.createElement(Grid2.A,{size:3},react.createElement(components.A_,{isNumeric:!0,label:"Basic number field",value:numberValue||"",onChange:value=>{setNumberValue(value)},debounceBy:500,fullWidth:!0,isClearable:!0})),react.createElement(Grid2.A,{size:3},react.createElement(components.A_,{isNumeric:!0,language:"de-DE",label:"Internationalized number field",value:internationalValue,onChange:handleInternationalValue,fullWidth:!0})),react.createElement(Grid2.A,{size:3},react.createElement(components.A_,{isNumeric:!0,language:"de-DE",label:"Internationalized currency field",value:internationalValue,onChange:handleInternationalValue,currency:"EUR",fullWidth:!0})))},TextField_NumericPreview=NumericPreview;NumericPreview.__docgenInfo={description:"",methods:[],displayName:"NumericPreview"};const TextField_stories={title:"Components/Inputs/TextField",component:components.A_},Default={args:{label:"Standard (default)",value:"",onChange:void 0}},Variants={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:'\n          <TextField variant="variant-option-here"/>\n          ',format:!0}}},render:()=>react.createElement(TextField_VariantsPreview,null)},FormProps={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:'\n            <TextField \n                label="Read-only"\n                value={\'cannot be modified\'}\n                variant="variant-option-here"\n                InputProps={{\n                readOnly: true\n                }}\n                fullWidth\n            />\n            ',format:!0}}},render:()=>react.createElement(TextField_FormPropsPreview,null)},Validation={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:'\n            <TextField label="Error" helperText="Helper-text" variant="variant-option-here" fullWidth error />\n            ',format:!0}}},render:()=>react.createElement(TextField_ValidationPreview,null)},Stepper={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:"\n            <TextField \n                label=\"Limited stepper (0 to 5)\" \n                isStepper value={limitedStepperValue ?? ''} \n                onChange={handleChangeLimitedValueImplementation} \n                decimalScale={0} \n                minValue={0} \n                maxValue={5} \n            />\n            ",format:!0}}},render:()=>react.createElement(TextField_StepperPreview,null)},Clearable={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:"\n            <TextField\n                label=\"Standard (default)\"\n                fullWidth\n                value={clearableValue || ''}\n                onChange={handleClearableImplementation}\n                isClearable\n            />\n            ",format:!0}}},render:()=>react.createElement(TextField_ClearablePreview,null)},Numeric={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:"\n            <TextField\n                label=\"Custom phone number format\"\n                value={phoneNumberValue}\n                onChange={handlePhoneValue}\n                isNumeric\n                inputProps={{ format: '+40 (###) ### ###', mask: '_', allowEmptyFormatting: true }}\n                fullWidth\n            />\n            ",format:!0}}},render:()=>react.createElement(TextField_NumericPreview,null)},__namedExportsOrder=["Default","Variants","FormProps","Validation","Stepper","Clearable","Numeric"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Standard (default)',\n    value: '',\n    onChange: undefined\n  }\n}",...Default.parameters?.docs?.source},description:{story:"The TextField wrapper component is a complete form control including a label, input, and help text.",...Default.parameters?.docs?.description}}},Variants.parameters={...Variants.parameters,docs:{...Variants.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n          <TextField variant="variant-option-here"/>\n          `,\n        format: true\n      }\n    }\n  },\n  render: () => <VariantsPreview />\n}',...Variants.parameters?.docs?.source},description:{story:"It comes with three variants: `standard` (default), `outlined` and `filled`.",...Variants.parameters?.docs?.description}}},FormProps.parameters={...FormProps.parameters,docs:{...FormProps.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n            <TextField \n                label="Read-only"\n                value={\'cannot be modified\'}\n                variant="variant-option-here"\n                InputProps={{\n                readOnly: true\n                }}\n                fullWidth\n            />\n            `,\n        format: true\n      }\n    }\n  },\n  render: () => <FormPropsPreview />\n}',...FormProps.parameters?.docs?.source},description:{story:"Standard form attributes are supported e.g. required, disabled, type, etc. as well as a helperText which is used to give context about a field's input,\nsuch as how the input will be used.",...FormProps.parameters?.docs?.description}}},Validation.parameters={...Validation.parameters,docs:{...Validation.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n            <TextField label="Error" helperText="Helper-text" variant="variant-option-here" fullWidth error />\n            `,\n        format: true\n      }\n    }\n  },\n  render: () => <ValidationPreview />\n}',...Validation.parameters?.docs?.source},description:{story:"The `error` prop toggles the error state. The `helperText` prop can then be used to provide feedback to the user about the error.",...Validation.parameters?.docs?.description}}},Stepper.parameters={...Stepper.parameters,docs:{...Stepper.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n            <TextField \n                label=\"Limited stepper (0 to 5)\" \n                isStepper value={limitedStepperValue ?? ''} \n                onChange={handleChangeLimitedValueImplementation} \n                decimalScale={0} \n                minValue={0} \n                maxValue={5} \n            />\n            `,\n        format: true\n      }\n    }\n  },\n  render: () => <StepperPreview />\n}",...Stepper.parameters?.docs?.source}}},Clearable.parameters={...Clearable.parameters,docs:{...Clearable.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n            <TextField\n                label=\"Standard (default)\"\n                fullWidth\n                value={clearableValue || ''}\n                onChange={handleClearableImplementation}\n                isClearable\n            />\n            `,\n        format: true\n      }\n    }\n  },\n  render: () => <ClearablePreview />\n}",...Clearable.parameters?.docs?.source},description:{story:"`isClearable` option add a clear button used to clear the input value.",...Clearable.parameters?.docs?.description}}},Numeric.parameters={...Numeric.parameters,docs:{...Numeric.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n            <TextField\n                label=\"Custom phone number format\"\n                value={phoneNumberValue}\n                onChange={handlePhoneValue}\n                isNumeric\n                inputProps={{ format: '+40 (###) ### ###', mask: '_', allowEmptyFormatting: true }}\n                fullWidth\n            />\n            `,\n        format: true\n      }\n    }\n  },\n  render: () => <NumericPreview />\n}",...Numeric.parameters?.docs?.source},description:{story:"`isNumeric` allow users to use an input formatter. At its core, it uses [React number format](https://s-yadav.github.io/react-number-format/docs/intro)",...Numeric.parameters?.docs?.description}}}}}]);