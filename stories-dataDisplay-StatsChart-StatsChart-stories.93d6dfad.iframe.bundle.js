"use strict";(self.webpackChunk_totalsoft_rocket_ui=self.webpackChunk_totalsoft_rocket_ui||[]).push([[971],{"./.yarn/__virtual__/@mui-icons-material-virtual-26efe69e79/4/.yarn/berry/cache/@mui-icons-material-npm-6.4.0-7ebdd5ff6d-10c0.zip/node_modules/@mui/icons-material/esm/AccessTime.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-caf4cefd95/4/.yarn/berry/cache/@mui-material-npm-6.4.0-9baf3cbb27-10c0.zip/node_modules/@mui/material/utils/createSvgIcon.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../../.yarn/berry/cache/react-npm-19.0.0-e33c9aa1c0-10c0.zip/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__=(0,_utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__.A)([(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8"},"0"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"},"1")],"AccessTime")},"./src/stories/dataDisplay/StatsChart/StatsChart.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Bar:()=>Bar,Gauge:()=>Gauge,Line:()=>Line,Pie:()=>Pie,Scatter:()=>Scatter,__namedExportsOrder:()=>__namedExportsOrder,default:()=>StatsChart_stories});var react=__webpack_require__("../../../.yarn/berry/cache/react-npm-19.0.0-e33c9aa1c0-10c0.zip/node_modules/react/index.js"),AccessTime=__webpack_require__("./.yarn/__virtual__/@mui-icons-material-virtual-26efe69e79/4/.yarn/berry/cache/@mui-icons-material-npm-6.4.0-7ebdd5ff6d-10c0.zip/node_modules/@mui/icons-material/esm/AccessTime.js"),components=__webpack_require__("./src/components/index.ts");const scatterData=[{id:"data-0",x1:329.39,x2:391.29,y1:443.28,y2:153.9},{id:"data-1",x1:96.94,x2:139.6,y1:110.5,y2:217.8},{id:"data-2",x1:336.35,x2:282.34,y1:175.23,y2:286.32},{id:"data-3",x1:159.44,x2:384.85,y1:195.97,y2:325.12},{id:"data-4",x1:188.86,x2:182.27,y1:351.77,y2:144.58},{id:"data-5",x1:143.86,x2:360.22,y1:43.253,y2:146.51},{id:"data-6",x1:202.02,x2:209.5,y1:376.34,y2:309.69},{id:"data-7",x1:384.41,x2:258.93,y1:31.514,y2:236.38},{id:"data-8",x1:256.76,x2:70.571,y1:231.31,y2:440.72},{id:"data-9",x1:143.79,x2:419.02,y1:108.04,y2:20.29},{id:"data-10",x1:103.48,x2:15.886,y1:321.77,y2:484.17},{id:"data-11",x1:272.39,x2:189.03,y1:120.18,y2:54.962},{id:"data-12",x1:23.57,x2:456.4,y1:366.2,y2:418.5},{id:"data-13",x1:219.73,x2:235.96,y1:451.45,y2:181.32},{id:"data-14",x1:54.99,x2:434.5,y1:294.8,y2:440.9},{id:"data-15",x1:134.13,x2:383.8,y1:121.83,y2:273.52},{id:"data-16",x1:12.7,x2:270.8,y1:287.7,y2:346.7},{id:"data-17",x1:176.51,x2:119.17,y1:134.06,y2:74.528},{id:"data-18",x1:65.05,x2:78.93,y1:104.5,y2:150.9},{id:"data-19",x1:162.25,x2:63.707,y1:413.07,y2:26.483},{id:"data-20",x1:68.88,x2:150.8,y1:74.68,y2:333.2},{id:"data-21",x1:95.29,x2:329.1,y1:360.6,y2:422},{id:"data-22",x1:390.62,x2:10.01,y1:330.72,y2:488.06}],scatterChartOptions={series:[{label:"Series A",data:scatterData.map((v=>({x:v.x1,y:v.y1,id:v.id})))},{label:"Series B",data:scatterData.map((v=>({x:v.x1,y:v.y2,id:v.id})))}],width:450,height:300},StatsChart_stories={title:"Components/DataDisplay/StatsChart",component:components.y_},Line={args:{title:"Line chart",StatIcon:AccessTime.A,statText:"Line chart infos",chartColor:"secondary",iconColor:"info",text:"This is a line chart",statAction:"View",chart:{type:"line",xAxis:[{data:[1,2,3,5,8,10]}],series:[{data:[2,5.5,2,8.5,1.5,5]}],width:450,height:300}},parameters:{docs:{source:{code:"\n        <StatsChart\n          StatIcon={AccessTime}\n          statText={'Line chart infos'}\n          title={'Line Chart'}\n          chartColor=\"secondary\"\n          iconColor=\"info\"\n          text={'This is a line chart'}\n          statAction='View',\n          chart={{\n            type: 'line',\n            xAxis: [{ data: [1, 2, 3, 5, 8, 10] }],\n            series: [{ data: [2, 5.5, 2, 8.5, 1.5, 5] }],\n            width: 450,\n            height: 300\n          }}\n        />",format:!0}}}},Bar={args:{title:"Bar chart",StatIcon:AccessTime.A,statText:"Bar chart infos",iconColor:"info",text:"This is a bar chart with custom colors",statAction:"View",chart:{type:"bar",colors:["#ff6f61","#fdd835","#004d6f"],xAxis:[{scaleType:"band",data:["group A","group B","group C"]}],series:[{data:[4,3,5]},{data:[1,6,3]},{data:[2,5,6]}],width:450,height:300}},parameters:{docs:{source:{code:"<StatsChart\n          StatIcon={AccessTime}\n          statText={'Bar chart infos'}\n          title={'Bar Chart'}\n          chartColor=\"info\"\n          iconColor=\"info\"\n          text={'This is a bar chart with custom colors'}\n          statAction={'View'}\n          chart={{\n            type: 'bar',\n            colors: ['#ff6f61', '#fdd835', '#004d6f'],\n            xAxis: [{ scaleType: 'band', data: ['group A', 'group B', 'group C'] }],\n            series: [{ data: [4, 3, 5] }, { data: [1, 6, 3] }, { data: [2, 5, 6] }],\n            width: 450,\n            height: 300\n          }}\n        />",format:!0}}}},Pie={args:{title:"Pie chart",StatIcon:AccessTime.A,statText:"Pie chart infos",chartColor:"secondary",iconColor:"info",text:"This is a pie chart with action button",statAction:react.createElement(components.$n,{size:"tiny"},"Ok"),chart:{type:"pie",series:[{data:[{id:0,value:10,label:"series A"},{id:1,value:15,label:"series B"},{id:2,value:20,label:"series C"}]}],width:450,height:300}},parameters:{docs:{source:{code:"<StatsChart\n          StatIcon={ErrorOutline}\n          statText={'Pie chart infos'}\n          title={'Pie Chart'}\n          chartColor=\"info\"\n          iconColor=\"error\"\n          text={'This is a pie chart with action button'}\n          statAction= <Button size=\"tiny\">Ok</Button>,\n          chart={{\n            type: 'pie',\n            series: [\n              {\n                data: [\n                  { id: 0, value: 10, label: 'series A' },\n                  { id: 1, value: 15, label: 'series B' },\n                  { id: 2, value: 20, label: 'series C' }\n                ]\n              }\n            ],\n            width: 450,\n            height: 300\n          }}\n        />",format:!0}}}},Scatter={args:{title:"Scatter chart",StatIcon:AccessTime.A,statText:"Scatter chart infos",chartColor:"secondary",iconColor:"info",text:"This is a scatter chart",statAction:"View",chart:{type:"scatter",...scatterChartOptions}},parameters:{docs:{source:{code:"\n        const scatterData = [\n        {\n          id: 'data-0',\n          x1: 329.39,\n          x2: 391.29,\n          y1: 443.28,\n          y2: 153.9\n        },\n        {\n          id: 'data-1',\n          x1: 96.94,\n          x2: 139.6,\n          y1: 110.5,\n          y2: 217.8\n        },\n        {\n          id: 'data-2',\n          x1: 336.35,\n          x2: 282.34,\n          y1: 175.23,\n          y2: 286.32\n        }\n        //etc...  \n      ]\n\n        <StatsChart\n          StatIcon={AccessTime}\n          statText={'Scatter chart infos'}\n          title={'Scatter Chart'}\n          chartColor=\"warning\"\n          iconColor=\"info\"\n          text={'This is a scatter chart'}\n          statAction={'View'}\n          chart={{\n            type: 'scatter',\n            series: [\n              {\n                label: 'Series A',\n                data: scatterData.map(v => ({ x: v.x1, y: v.y1, id: v.id }))\n              },\n              {\n                label: 'Series B',\n                data: scatterData.map(v => ({ x: v.x1, y: v.y2, id: v.id }))\n              }\n            ],\n            width: 450,\n            height: 300\n          }}\n        />",format:!0}}}},Gauge={args:{title:"Gauge chart",StatIcon:AccessTime.A,statText:"Gauge chart infos",chartColor:"secondary",iconColor:"info",text:"This is a gauge chart",statAction:"View",chart:{type:"gauge",startAngle:-90,width:450,height:300,value:50}},parameters:{docs:{source:{code:"<StatsChart\n          StatIcon={AccessTime}\n          statText={'Gauge chart infos'}\n          title={'Gauge Chart'}\n          chartColor=\"info\"\n          iconColor=\"info\"\n          text={'This is a gauge chart'}\n          statAction={'View'}\n          chart={{\n            type: 'gauge',\n            startAngle: -90,\n            width: 450,\n            height: 300,\n            value: 50\n          }}\n        />",format:!0}}}},__namedExportsOrder=["Line","Bar","Pie","Scatter","Gauge"];Line.parameters={...Line.parameters,docs:{...Line.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Line chart',\n    StatIcon: AccessTime,\n    statText: 'Line chart infos',\n    chartColor: 'secondary',\n    iconColor: 'info',\n    text: 'This is a line chart',\n    statAction: 'View',\n    chart: {\n      type: 'line',\n      ...lineChartOptions\n    }\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n        <StatsChart\n          StatIcon={AccessTime}\n          statText={'Line chart infos'}\n          title={'Line Chart'}\n          chartColor=\"secondary\"\n          iconColor=\"info\"\n          text={'This is a line chart'}\n          statAction='View',\n          chart={{\n            type: 'line',\n            xAxis: [{ data: [1, 2, 3, 5, 8, 10] }],\n            series: [{ data: [2, 5.5, 2, 8.5, 1.5, 5] }],\n            width: 450,\n            height: 300\n          }}\n        />`,\n        format: true\n      }\n    }\n  }\n}",...Line.parameters?.docs?.source},description:{story:"The Line Stat Chart. For more information see https://mui.com/x/react-charts/lines/",...Line.parameters?.docs?.description}}},Bar.parameters={...Bar.parameters,docs:{...Bar.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Bar chart',\n    StatIcon: AccessTime,\n    statText: 'Bar chart infos',\n    iconColor: 'info',\n    text: 'This is a bar chart with custom colors',\n    statAction: 'View',\n    chart: {\n      type: 'bar',\n      ...barChartOptions\n    }\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `<StatsChart\n          StatIcon={AccessTime}\n          statText={'Bar chart infos'}\n          title={'Bar Chart'}\n          chartColor=\"info\"\n          iconColor=\"info\"\n          text={'This is a bar chart with custom colors'}\n          statAction={'View'}\n          chart={{\n            type: 'bar',\n            colors: ['#ff6f61', '#fdd835', '#004d6f'],\n            xAxis: [{ scaleType: 'band', data: ['group A', 'group B', 'group C'] }],\n            series: [{ data: [4, 3, 5] }, { data: [1, 6, 3] }, { data: [2, 5, 6] }],\n            width: 450,\n            height: 300\n          }}\n        />`,\n        format: true\n      }\n    }\n  }\n}",...Bar.parameters?.docs?.source},description:{story:"The Bar Stat Chart. For more information see https://mui.com/x/react-charts/bars/",...Bar.parameters?.docs?.description}}},Pie.parameters={...Pie.parameters,docs:{...Pie.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Pie chart',\n    StatIcon: AccessTime,\n    statText: 'Pie chart infos',\n    chartColor: 'secondary',\n    iconColor: 'info',\n    text: 'This is a pie chart with action button',\n    statAction: <Button size=\"tiny\">Ok</Button>,\n    chart: {\n      type: 'pie',\n      ...pieChartOptions\n    }\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `<StatsChart\n          StatIcon={ErrorOutline}\n          statText={'Pie chart infos'}\n          title={'Pie Chart'}\n          chartColor=\"info\"\n          iconColor=\"error\"\n          text={'This is a pie chart with action button'}\n          statAction= <Button size=\"tiny\">Ok</Button>,\n          chart={{\n            type: 'pie',\n            series: [\n              {\n                data: [\n                  { id: 0, value: 10, label: 'series A' },\n                  { id: 1, value: 15, label: 'series B' },\n                  { id: 2, value: 20, label: 'series C' }\n                ]\n              }\n            ],\n            width: 450,\n            height: 300\n          }}\n        />`,\n        format: true\n      }\n    }\n  }\n}",...Pie.parameters?.docs?.source},description:{story:"The Pie Stat Chart. For more information see https://mui.com/x/react-charts/pie/",...Pie.parameters?.docs?.description}}},Scatter.parameters={...Scatter.parameters,docs:{...Scatter.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Scatter chart',\n    StatIcon: AccessTime,\n    statText: 'Scatter chart infos',\n    chartColor: 'secondary',\n    iconColor: 'info',\n    text: 'This is a scatter chart',\n    statAction: 'View',\n    chart: {\n      type: 'scatter',\n      ...scatterChartOptions\n    }\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n        const scatterData = [\n        {\n          id: 'data-0',\n          x1: 329.39,\n          x2: 391.29,\n          y1: 443.28,\n          y2: 153.9\n        },\n        {\n          id: 'data-1',\n          x1: 96.94,\n          x2: 139.6,\n          y1: 110.5,\n          y2: 217.8\n        },\n        {\n          id: 'data-2',\n          x1: 336.35,\n          x2: 282.34,\n          y1: 175.23,\n          y2: 286.32\n        }\n        //etc...  \n      ]\n\n        <StatsChart\n          StatIcon={AccessTime}\n          statText={'Scatter chart infos'}\n          title={'Scatter Chart'}\n          chartColor=\"warning\"\n          iconColor=\"info\"\n          text={'This is a scatter chart'}\n          statAction={'View'}\n          chart={{\n            type: 'scatter',\n            series: [\n              {\n                label: 'Series A',\n                data: scatterData.map(v => ({ x: v.x1, y: v.y1, id: v.id }))\n              },\n              {\n                label: 'Series B',\n                data: scatterData.map(v => ({ x: v.x1, y: v.y2, id: v.id }))\n              }\n            ],\n            width: 450,\n            height: 300\n          }}\n        />`,\n        format: true\n      }\n    }\n  }\n}",...Scatter.parameters?.docs?.source},description:{story:"The Scatter Stat Chart. For more information see https://mui.com/x/react-charts/scatter/",...Scatter.parameters?.docs?.description}}},Gauge.parameters={...Gauge.parameters,docs:{...Gauge.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Gauge chart',\n    StatIcon: AccessTime,\n    statText: 'Gauge chart infos',\n    chartColor: 'secondary',\n    iconColor: 'info',\n    text: 'This is a gauge chart',\n    statAction: 'View',\n    chart: {\n      type: 'gauge',\n      ...gaugeChartOptions\n    }\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `<StatsChart\n          StatIcon={AccessTime}\n          statText={'Gauge chart infos'}\n          title={'Gauge Chart'}\n          chartColor=\"info\"\n          iconColor=\"info\"\n          text={'This is a gauge chart'}\n          statAction={'View'}\n          chart={{\n            type: 'gauge',\n            startAngle: -90,\n            width: 450,\n            height: 300,\n            value: 50\n          }}\n        />`,\n        format: true\n      }\n    }\n  }\n}",...Gauge.parameters?.docs?.source},description:{story:"The Gauge Stat Chart. For more information see https://mui.com/x/react-charts/gauge/",...Gauge.parameters?.docs?.description}}}}}]);