"use strict";(self.webpackChunk_totalsoft_rocket_ui=self.webpackChunk_totalsoft_rocket_ui||[]).push([[814],{"./.yarn/__virtual__/@mui-icons-material-virtual-06ce054530/0/cache/@mui-icons-material-npm-5.16.0-7158e523df-92d7592eb9.zip/node_modules/@mui/icons-material/AccessTime.js":function(__unused_webpack_module,exports,__webpack_require__){var _interopRequireDefault=__webpack_require__("./.yarn/cache/@babel-runtime-npm-7.24.7-035e043b00-d17f29eed6.zip/node_modules/@babel/runtime/helpers/interopRequireDefault.js");exports.Z=void 0;var _createSvgIcon=_interopRequireDefault(__webpack_require__("./.yarn/__virtual__/@mui-icons-material-virtual-06ce054530/0/cache/@mui-icons-material-npm-5.16.0-7158e523df-92d7592eb9.zip/node_modules/@mui/icons-material/utils/createSvgIcon.js")),_jsxRuntime=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/jsx-runtime.js");exports.Z=(0,_createSvgIcon.default)([(0,_jsxRuntime.jsx)("path",{d:"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8"},"0"),(0,_jsxRuntime.jsx)("path",{d:"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"},"1")],"AccessTime")},"./src/stories/charts/statsChart/StatsChart.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Bar:function(){return Bar},Default:function(){return Default},Line:function(){return Line},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return StatsChart_stories}});__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js");var statsChartOptions={responsive:!0,maintainAspectRatio:!1,barPercentage:.2,tooltip:!0,plugins:{title:{display:!1,text:""},legend:{display:!1}},layout:{padding:{left:0,right:20,top:20,bottom:0}},scales:{x:{offset:!1,grid:{display:!0,color:"white",borderDash:[1,5],zeroLineColor:"rgb(255,255,255)",drawBorder:!1,zeroLineWidth:0},scaleLabel:{display:!1,labelString:"",fontColor:"black"},ticks:{color:"white",autoSkip:!1}},y:{grid:{display:!0,color:"white",borderDash:[1,5],zeroLineColor:"rgb(255,255,255)",drawBorder:!1,zeroLineBorderDash:[1,5]},scaleLabel:{display:!1,labelString:"",fontColor:"black"},ticks:{color:"white"}}}},labels=["January","February","March","April","May","June","July"],statsChartData={labels:labels,datasets:[{data:labels.map((function(){return Math.floor(101*Math.random())})),label:"Dataset 1",backgroundColor:"white",borderColor:"white"},{data:labels.map((function(){return Math.floor(101*Math.random())})),label:"Dataset 2",backgroundColor:"white",borderColor:"white"}]},components=__webpack_require__("./src/components/index.ts"),AccessTime=__webpack_require__("./.yarn/__virtual__/@mui-icons-material-virtual-06ce054530/0/cache/@mui-icons-material-npm-5.16.0-7158e523df-92d7592eb9.zip/node_modules/@mui/icons-material/AccessTime.js"),Grid=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-6eb82f048f/0/cache/@mui-material-npm-5.16.0-a68e3c876b-3ba69218e2.zip/node_modules/@mui/material/Grid/Grid.js"),jsx_runtime=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/jsx-runtime.js"),BarPreview=function BarPreview(){return(0,jsx_runtime.jsxs)(Grid.ZP,{container:!0,spacing:2,children:[(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:6,children:(0,jsx_runtime.jsx)(components.gV,{type:"bar",data:statsChartData,chartColor:"info",StatIcon:AccessTime.Z,statText:"Bar chart infos",title:"Bar Chart",options:statsChartOptions})}),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:6,children:(0,jsx_runtime.jsx)(components.gV,{type:"bar",data:statsChartData,chartColor:"info",StatIcon:AccessTime.Z,statText:"Bar chart infos",title:"Bar chart with action button",options:statsChartOptions,statAction:(0,jsx_runtime.jsx)(components.zx,{size:"tiny",children:"Ok"}),iconColor:"info"})})]})};BarPreview.displayName="BarPreview",BarPreview.__docgenInfo={description:"",methods:[],displayName:"BarPreview"};var statsChart_BarPreview=BarPreview,LinePreview=function LinePreview(){return(0,jsx_runtime.jsxs)(Grid.ZP,{container:!0,spacing:2,children:[(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:6,children:(0,jsx_runtime.jsx)(components.gV,{type:"line",data:statsChartData,chartColor:"info",StatIcon:AccessTime.Z,statText:"Line chart",title:"Line Chart with warning icon color",options:statsChartOptions,iconColor:"error"})}),(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:6,children:(0,jsx_runtime.jsx)(components.gV,{type:"line",data:statsChartData,chartColor:"info",StatIcon:AccessTime.Z,statText:"Line chart infos",title:"Line Chart with action button",options:statsChartOptions,statAction:(0,jsx_runtime.jsx)(components.zx,{size:"tiny",children:"Ok"})})})]})};LinePreview.displayName="LinePreview",LinePreview.__docgenInfo={description:"",methods:[],displayName:"LinePreview"};var _Default$parameters,_Default$parameters2,_Default$parameters3,_Line$parameters,_Line$parameters2,_Line$parameters3,_Bar$parameters,_Bar$parameters2,_Bar$parameters3,statsChart_LinePreview=LinePreview,StatsChart_stories={title:"Components/Charts/StatsChart",component:components.gV,tags:["autodocs"],args:{width:500,height:200}},Default={args:{data:statsChartData,options:statsChartOptions},parameters:{docs:{source:{code:"<StatsChart\n            data={{\n                    labels: ['january', 'february], \n                    datasets: [{\n                        data: [10, 35], \n                        label: 'Dataset 1', \n                        backgroundColor: 'white',\n                        borderColor: 'white'}]\n                }}\n            chartColor={'info'}\n            StatIcon={AccessTime}\n            options={{\n                responsive: true,\n                maintainAspectRatio: false\n            }}\n          />",format:!0}}}},Line={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:"\n        <StatsChart\n          type=\"line\"\n          title={'Line Chart'}\n          chartColor={'info'}\n          StatIcon={AccessTime}\n          statText={'Line chart infos'}\n          data={DataToBeDisplayed}\n          options={statsChartOptions}\n        />\n        ",format:!0}}},render:function render(){return(0,jsx_runtime.jsx)(statsChart_LinePreview,{})}},Bar={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:"\n        <StatsChart\n          type=\"bar\"\n          title={'Bar Chart'}\n          chartColor={'info'}\n          StatIcon={AccessTime}\n          statText={'Bar chart infos'}\n          data={DataToBeDisplayed}\n          options={statsChartOptions}\n        />\n        ",format:!0}}},render:function render(args){return(0,jsx_runtime.jsx)(statsChart_BarPreview,Object.assign({},args))}};Default.parameters=Object.assign({},Default.parameters,{docs:Object.assign({},null==(_Default$parameters=Default.parameters)?void 0:_Default$parameters.docs,{source:Object.assign({originalSource:"{\n  args: {\n    data: statsChartData,\n    options: statsChartOptions\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `<StatsChart\n            data={{\n                    labels: ['january', 'february], \n                    datasets: [{\n                        data: [10, 35], \n                        label: 'Dataset 1', \n                        backgroundColor: 'white',\n                        borderColor: 'white'}]\n                }}\n            chartColor={'info'}\n            StatIcon={AccessTime}\n            options={{\n                responsive: true,\n                maintainAspectRatio: false\n            }}\n          />`,\n        format: true\n      }\n    }\n  }\n}"},null==(_Default$parameters2=Default.parameters)||null==(_Default$parameters2=_Default$parameters2.docs)?void 0:_Default$parameters2.source),description:Object.assign({story:"The default StatsChart component."},null==(_Default$parameters3=Default.parameters)||null==(_Default$parameters3=_Default$parameters3.docs)?void 0:_Default$parameters3.description)})}),Line.parameters=Object.assign({},Line.parameters,{docs:Object.assign({},null==(_Line$parameters=Line.parameters)?void 0:_Line$parameters.docs,{source:Object.assign({originalSource:"{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <StatsChart\n          type=\"line\"\n          title={'Line Chart'}\n          chartColor={'info'}\n          StatIcon={AccessTime}\n          statText={'Line chart infos'}\n          data={DataToBeDisplayed}\n          options={statsChartOptions}\n        />\n        `,\n        format: true\n      }\n    }\n  },\n  render: () => <LinePreview />\n}"},null==(_Line$parameters2=Line.parameters)||null==(_Line$parameters2=_Line$parameters2.docs)?void 0:_Line$parameters2.source),description:Object.assign({story:"Besides showing chart data, the content of the component can be improved using properties like `chartColor`, `StatIcon` and many more."},null==(_Line$parameters3=Line.parameters)||null==(_Line$parameters3=_Line$parameters3.docs)?void 0:_Line$parameters3.description)})}),Bar.parameters=Object.assign({},Bar.parameters,{docs:Object.assign({},null==(_Bar$parameters=Bar.parameters)?void 0:_Bar$parameters.docs,{source:Object.assign({originalSource:"{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <StatsChart\n          type=\"bar\"\n          title={'Bar Chart'}\n          chartColor={'info'}\n          StatIcon={AccessTime}\n          statText={'Bar chart infos'}\n          data={DataToBeDisplayed}\n          options={statsChartOptions}\n        />\n        `,\n        format: true\n      }\n    }\n  },\n  render: args => <BarPreview {...args} />\n}"},null==(_Bar$parameters2=Bar.parameters)||null==(_Bar$parameters2=_Bar$parameters2.docs)?void 0:_Bar$parameters2.source),description:Object.assign({story:"`Bar` chart type can be used beside `Line` (which is the default)."},null==(_Bar$parameters3=Bar.parameters)||null==(_Bar$parameters3=_Bar$parameters3.docs)?void 0:_Bar$parameters3.description)})});var __namedExportsOrder=["Default","Line","Bar"]}}]);