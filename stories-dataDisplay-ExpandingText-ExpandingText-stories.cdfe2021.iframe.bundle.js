"use strict";(self.webpackChunk_totalsoft_rocket_ui=self.webpackChunk_totalsoft_rocket_ui||[]).push([[875],{"./src/stories/dataDisplay/ExpandingText/ExpandingText.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Display:()=>Display,ExpandingText:()=>ExpandingText,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ExpandingText_stories});var react=__webpack_require__("../../../.yarn/berry/cache/react-npm-18.3.1-af38f3c1ae-10c0.zip/node_modules/react/index.js"),components=__webpack_require__("./src/components/index.ts"),Grid2=__webpack_require__("./.yarn/__virtual__/@mui-material-virtual-2baa73ee9f/4/.yarn/berry/cache/@mui-material-npm-6.1.6-6fe62c1d46-10c0.zip/node_modules/@mui/material/Grid2/Grid2.js");const DisplayPreview_text="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris viverra in neque non euismod. Nunc convallis ornare sem vel iaculis. Sed in condimentum sapien. Morbi viverra, dolor sed sollicitudin tristique, dui sem pretium odio, nec bibendum nibh velit vel turpis. Maecenas elit velit, molestie quis cursus eu, dignissim a elit. Etiam accumsan cursus ipsum, sit amet semper arcu faucibus sed. Donec aliquam fermentum ligula, a cursus lacus finibus non. Fusce id sollicitudin dui. Suspendisse malesuada lorem enim, at euismod neque tincidunt pellentesque.",DisplayPreview=()=>react.createElement(Grid2.A,{container:!0,rowSpacing:2},react.createElement(Grid2.A,null,react.createElement(components.o5,{variant:"body2",emphasis:"bold"},"display: inline-block"),react.createElement(components.CY,{text:DisplayPreview_text,display:"inline-block",minLength:250})),react.createElement(Grid2.A,null,react.createElement(components.o5,{variant:"body2",emphasis:"bold"},"display: block"),react.createElement(components.CY,{text:DisplayPreview_text,display:"block",minLength:250})),react.createElement(Grid2.A,null,react.createElement(components.o5,{variant:"body2",emphasis:"bold"},"display: flex; justify-content: flex-end"),react.createElement(components.CY,{text:DisplayPreview_text,display:"flex",justifyContent:"flex-end",minLength:300})));DisplayPreview.__docgenInfo={description:"",methods:[],displayName:"DisplayPreview"};const ExpandingText_stories={title:"Components/DataDisplay/ExpandingText",component:components.CY},ExpandingText={args:{text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris viverra in neque non euismod. Nunc convallis ornare sem vel iaculis."},parameters:{docs:{source:{code:"\n        <ExpandingText text={text to be displayed} />\n        ",format:!0}}}},Display={parameters:{controls:{hideNoControlsWarning:!0},docs:{source:{code:'\n        <ExpandingText text={text to be displayed} display="inline-block" minLength={250} />\n        ',format:!0}}},render:()=>react.createElement(DisplayPreview,null)},__namedExportsOrder=["ExpandingText","Display"];ExpandingText.parameters={...ExpandingText.parameters,docs:{...ExpandingText.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris viverra in neque non euismod. Nunc convallis ornare sem vel iaculis.'\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n        <ExpandingText text={text to be displayed} />\n        `,\n        format: true\n      }\n    }\n  }\n}",...ExpandingText.parameters?.docs?.source}}},Display.parameters={...Display.parameters,docs:{...Display.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    controls: {\n      hideNoControlsWarning: true\n    },\n    docs: {\n      source: {\n        code: `\n        <ExpandingText text={text to be displayed} display="inline-block" minLength={250} />\n        `,\n        format: true\n      }\n    }\n  },\n  render: () => <DisplayPreview />\n}',...Display.parameters?.docs?.source},description:{story:"In order to render the `ExpandAction` component (ShowMore/ShowLess functionality), a `minLength` prop must be provided that is less than length of the text displayed.\nWhen the `ExpandAction` component is rendered, different `display` options can be used.\nAlso, by providing `expandingActionProps` property, the `ExpandAction` component can be customized with `Typography` props.",...Display.parameters?.docs?.description}}}}}]);